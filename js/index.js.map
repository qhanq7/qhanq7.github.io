{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./client/src/common/constants/framework/constants.js","webpack:///./client/src/common/frameworks/errorUtil.js","webpack:///./client/src/common/frameworks/localStorageUtil.js","webpack:///./client/src/App.vue?616d","webpack:///./client/src/router/modules/mediaLink.js","webpack:///./client/src/router/index.js","webpack:///./client/src/common/utils/checkUpdateUtil.js","webpack:///./client/src/common/frameworks/sessionStorageUtil.js","webpack:///./client/src/common/utils/commonutil/isJsonString.js","webpack:///./client/src/common/frameworks/nativeUtil.js","webpack:///./client/src/App.vue?98f3","webpack:///./client/src/App.vue","webpack:///./client/src/common/frameworks/routerUtil.js","webpack:///./client/src/common/utils/storageValidationUtil.js","webpack:///./client/src/main.js","webpack:///./client/src/common/frameworks/dateutil/zf.js","webpack:///./client/src/common/frameworks/dateutil/format.js","webpack:///./client/src/common/constants/framework/framework.js","webpack:///./client/src/common/utils/commonutil/getUUID.js","webpack:///./client/src/common/utils/commonutil/isOsApp.js","webpack:///./client/src/common/frameworks/cipherUtil.js","webpack:///./client/src/common/constants/framework/native.js","webpack:///./client/src/common/frameworks/cookieUtil.js","webpack:///./client/src/common/utils/loginUtil.js","webpack:///./client/src/common/utils/commonutil/isNull.js","webpack:///./client/src/common/constants/common/common.js","webpack:///./client/src/common/frameworks/dateutil/calcDate.js","webpack:///./client/src/common/frameworks/dateutil/getDateParse.js","webpack:///./client/src/common/utils/commonutil/gotoInternalPage.js","webpack:///./client/src/common/utils/bizUtil.js","webpack:///./client/src/common/frameworks/logUtil.js","webpack:///./client/src/common/utils/commonutil/viewType.js","webpack:///./client/src/common/constants/framework/messages.js","webpack:///./client/src/common/utils/commonutil/onReloadApp.js","webpack:///./client/src/common/frameworks/axiosUtil.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","installedCssChunks","jsonpScriptSrc","p","exports","module","l","e","promises","cssChunks","Promise","resolve","reject","href","fullhref","existingLinkTags","document","getElementsByTagName","tag","dataHref","getAttribute","rel","existingStyleTags","linkTag","createElement","type","onload","onerror","event","request","target","src","err","Error","code","parentNode","removeChild","head","appendChild","then","installedChunkData","promise","onScriptComplete","script","charset","timeout","nc","setAttribute","error","clearTimeout","chunk","errorType","realSrc","message","name","undefined","setTimeout","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","console","jsonpArray","window","oldJsonpFunction","slice","COMM_CONST","setCampaignId","campaignId","DEFAULT_PARAMS","getCampaignId","setCocd","coCd","getCocd","defaultCocd","getWebAppDefaultCocd","isOsApp","getDefaultCatalogId","catalogId","base","getAcceptPath","isApp","appCocd","webCocd","storeId","langId","mobile","tv","sbook","departmentstore","editStore","happydeal","busChnId","receipt","midx","channel","tasknm","receiptApply","cnm","mnm","receiptConfirm","selfDealDateStr","homeTax","STORAGE_KEY","SEARCH_WORD_LIST","EVENT_POPUP_LOGIN","EVENT_POPUP_REGIST","EVENT_POPUP_MAIN","EVENT_POPUP_DETAIL","EVENT_POPUP_EXHABIT","JOIN_TIME","LNB_LCATEID","USER_VISIT_HIS","RVP_VISIT","UUID","APP_RELOAD_CNT","STORAGE_RESET_REQUIRED","SESSION_STORAGE_KEY","MAIN_EVENT_POPUP_DISPLAY","ATTRACT_APP_DOWN_BANNER","LOGON_TYPE","NORMAL","SIMPLE","TWITTER","FACEBOOK","NONMEMBER","KEY_CODE","BACK_SPACE","LEFT","RIGHT","DELETE","NUM_0","NUM_9","RECEIPT_BUTTON_TEXT","APPLY","COMPLETE","IMPOSSIBLE","CHECK_NUM","CONFIRM_MESSAGES","PRODUCT_ROW_REMOVE","PRODUCT_ALL_REMOVE","TOAST_MESSAGES","CART_ADD_SUCCESS","CART_ADD_OPTION","BANNER_HIDE_COCD","errorUtil","getCurrentURL","currentURL","location","getComponentName","vm","componentName","$options","generateErrorParam","stack","this","params","CONST","LOG","MESSAGE","REQUEST","ERROR","trace","status","page","view","logError","logUtil","sendRecord","TYPE","handleError","localStorageUtil","localStorage","getItem","IS_CIPHER_ON_STORAGE","cipherUtil","decryptLightly","isJsonString","JSON","parse","set","val","stringify","encryptLightly","setItem","del","removeItem","setSearchWord","searchWord","maxCnt","searchWords","keyword","validateDuplicateKeyword","handleExceedingMaxCnt","isDuplicated","deleteSearchWordByKeyword","filter","mediaLink","path","children","component","meta","title","layout","depth","Vue","use","VueRouter","routes","forEach","route","router","scrollBehavior","to","from","savedPosition","y","scroll","pageYOffset","retryCount","debounceTimer","setInterval","clearInterval","hasSavedPosition","Boolean","beforeEach","next","x","pageXOffset","MAIN_REDIRECT_CASES","some","isLoggedIn","loginUtil","matched","record","forbidsLoginUser","requiresPasswordAuth","cookieUtil","getCookie","replace","requiresAuth","NATIVE_CONST","LOGIN_REDIRECT_PATH","returnRoute","checkUpdateUtil","clearTime","clearCount","onError","test","reload","IS_TEST_REPORT","saveLatest","axios","response","lastModified","headers","UPDATE","KEY","SEPARATOR","COUNT","setCount","count","getCount","TIME","setCurrentTime","Date","getTime","getLastRequestTime","getCurrentCompareTime","currentTime","setSeconds","getSeconds","MAXIMUM_WAIT_TIME","check","CHECK_TYPE","MAXIMUM_COUNT","lastRequestTime","compareTime","LatestLastModified","sessionStorageUtil","sessionStorage","clear","text","parsed","nativeUtil","goHome","NSHub","naGoHome","goBack","naBack","closeWebView","naCloseWebView","presentLogin","naPresentLogin","NATIVE_URL","LOGIN","setLoginMemberInfo","memberInfo","naSetLoginMemberInfo","logOut","naLogOut","gotoURL","url","APP_MOBILE_HOST","process","indexOf","gotoFullURL","naGotoFullURL","lnbHide","naLnbHide","showToast","msg","naShowToast","gotoOrderSheet","jsonString","setCookie","ORDER_PARAMS","naGoOrderSheet","ORDER_SHEET","getOrderParams","strOrderParams","isNull","orderParams","deleteCookie","gotoOrderConsult","naGoOrderConsult","ORDER_CONSULT","gotoSearch","SEARCH","gotoCartList","CART_LIST","getAppVersion","appVersion","naGetAppVersion","getOSVersion","callbackFunction","naGetOSVersion","doAppleLogin","naDoAppleLogin","openConfigWindow","naOpenConfigWindow","openPushHistoryWindow","naOpenPushHistoryWindow","refreshAll","naRefreshAll","goHappyDealHome","naGoHappyDealHome","goScheduleHome","naGoScheduleHome","goTVShoppingHome","naGoTVShoppingHome","goShopPlusHome","naGoShopPlusHome","goESpotHome","contentsId","naGoESpotHome","goBenefitCouponHome","naGoBenefitCouponHome","isAppFirstLogin","naIsAppFirstLogin","isWifiConnected","naIsWifiConnected","requestCredentials","naRequestCredentials","saveCredential","id","pw","naSaveCredential","saveCredentialExcep","naSaveCredentialExcep","loadHint","naLoadHint","stopCredential","naStopCredential","getPushUUID","naGetPushUUID","deleteCredential","naDeleteCredential","openEnomixTalk","loadURL","customerId","naOpenEnomixTalk","doPaycoLogin","action","naPaycoLogin","doKakaoLogin","viewType","naKakaoLogin","doShareLink","naDoShareLink","setRecentViewedProducts","naSetRecentViewedProducts","setBackBtnYn","backBtnYn","naSetBackBtnYn","setBottomNaviYn","bottomNaviYn","naSetBottomNaviYn","showAlert","naShowAlert","setCartCnt","naSetCartCnt","setAddCartResult","resultYn","naSetAddCartResult","setRoutePath","routePath","naSetRoutePath","openCert","callbackSuccess","callbackFail","naOpenCert","getShoppingAlarmCount","callbackFunc","naGetShoppingAlarmCount","getPushAgreeYn","naGetPushAgreeYn","gotoWebBrowser","naGotoWebBrowser","loadCompleted","dimYn","naLoadCompleted","gotoDeepLinkUrl","naGotoDeepLinkUrl","_vm","_h","$createElement","_c","_self","attrs","staticRenderFns","routerUtil","back","go","onRouterAbortShim","abortCallbacks","onAbort","callback","processAbortCallbacks","historyTransitionTo","history","constructor","transitionTo","onComplete","startsWith","endsWith","includes","storageValidationUtil","PLAIN_TEXT","checkStorageResetRequired","storedStorageResetRequired","resetStorage","isCipherOnStorage","decryptedText","VueAwesomeSwiper","Vue2TouchEvents","disableClick","touchClass","VueMeta","VueVideoPlayer","config","productionTip","errorHandler","info","IS_LOCAL_MODE","NONE","nslog","IS_DEV_LOG","$nsaxios","nsaxios","init","getUUID","render","h","App","$mount","zf","str","len","repeat","format","date","dateString","year","substr","month","day","hour","minute","second","$1","getFullYear","getMonth","getDate","getDay","getHours","getMinutes","API_HOST","API_URL","MOBILE_HOST","PC_HOST","NSMALL_API_HOST","NSMALL_API_COMMON_PATH","NSMALL_API_URL","NSMALL_API_MARKETING_PUSH_PATH","NSMALL_API_MARKETING_PUSH_VERSION","CIPHER_ENC_KEY","CIPHER_SALT","CIPHER_IV","DELIVERY_SECRET_TOKEN","STREAM","URL","BASE","SINGLE","RESPONSE","VALID","TYPE_NOT_VALID","ARGS_LENGTH_ZERO","NOT_READY","LOCAL_MODE","IS_SERVER_STATE","IS_DEV_MODE","IS_ALLOW_LOG","IS_ALLOW_SUCCESS_LOG","VUE_APP_IS_LOCAL_MODE","MOBILE_NSMALL_PATH","NS_IMAGE_CUST_SRV","NS_IMAGE_EXHI_SRV","NS_IMAGE","NS_IMAGE_PRODUCT","NS_IMAGE_CATE","LIVE","etc","ios","android","shopPlus","thinglive","NSTALK_TVLIVE_PATH","NSTALK_THINGLIVE_PATH","API_ERROR_MESSAGES","CATEGORY_ID_EMPLOYEE","CATEGORY_ID_HARIM","APP_CONFIG","LOCAL","DEV","TEST","PROD","ACTIVE_PROFILE","getActiveProfile","isActiveProfile","state","isLocal","isDev","isTest","isProd","crypto","getRandomValues","Uint8Array","toString","encryptValue","targetValue","secretKey","getSecretKey","cipherOptions","getCipherOption","ciphertext","CryptoJS","AES","encrypt","decryptValue","originalValue","bytes","decrypt","decryptedValue","enc","Utf8","getCipherObject","passPhrase","salt","keySize","iterationCount","options","iterations","PBKDF2","Hex","iv","Rabbit","MYPAGE_SETTING","ORDER_NSPAY_CERT","LOGIN_REDIRECT_NAME","LOGIN_TYPE","AUTO_LOGIN_YN","AUTO_LOGIN_ID","AUTO_LOGIN_PW","AUTO_ENT_FLAG","VIEW_PRODUCT_NUMBER","PRODUCT_DETAIL_PATH","GOING_INVOKE","PUSH_UUID","PUSH_YN","CONSTANTS","VIEW_HISTORY","MYPAGE","PRODUCT_DETAIL","SETTING","arg","alen","clen","cookie","substring","getCookieVal","expires","domain","secure","escape","pathStr","domainStr","getExpDate","days","hours","minutes","expDate","setDate","Number","setHours","setMinutes","toGMTString","offset","endstr","unescape","userId","getUserInfo","logonType","userName","custNum","logonId","email","hpNo","birthday","isAdult","adultAuthYN","tcode","telNo","isVip","sessionId","entFlag","synchronizeMemberInfo","loginyn","login","isAutoLoginCheck","autoLoginYn","nativeCustNum","nativeAdultAuthYN","userInfo","entEmail","entUserId","gender","registration","staffInfo","staffBnft","lastOrder","userMargetingEmail","userMargetingTM","userMarketingSMS","gradeNm","logonPassword","isCredential","fromLoginPage","logout","targetUrl","post","bizUtil","getCartCount","getMemberInfo","hasMemberInfo","item","setUserInfo","isAutoLoginUsed","checkLogonStatus","isNonMember","isSnsMember","changeStr","bReturn","COMMON_CONST","KAKAO","APP_KEY","JAVASCRIPT","HISTORY_GUBUN","PRODUCT","CATEGORY","EXHIBITION","EVENT","calcDate","startDate","week","dtReturn","dateFormat","setYear","setMonth","getDateParse","arr","split","gotoInternalPage","bannerId","espotId","mdUrl","invoke","tmp","paramStr","param","catch","getCreditCardCodeName","cardCode","paymentCardCode","common","basketCnt","setCartCount","formatCardNoWithAsterisk","cardNo","espotClickEvent","clickCode","clksrc","p_espotid","p_bannerid","gotoProductDetail","categoryId","catgroupId","via","query","categoryParam","searchGubun","categoryInfo","categoryLevelFinal","categoryNumber","open","gotoMain","partNumber","number","gotoOrdersheet","gotoMemberSetting","setRecentlyViewedProducts","productInfo","recentlyViewedProducts","products","settime","isTrue","msecPerHour","writetime","readtime","writeMonDay","readMonDay","interval","Math","floor","getHistoryPushFlag","dataInfo","hisInfo","hisGubun","offerIdfr","getRecentlyViewedProducts","realIndex","delHistoryList","index","getNativeCartCount","cartCnt","setAddCart","invokeParams","successHandling","orderId","secessionMemberCheker","returnBoolean","processFlag","root","PersonalInfo","log","nslogAxios","baseURL","KinesisSender","_isSendReady","_kinesisMockingApiGatewayUrl","_mode","initMetaData","setUserAgent","_userAgent","navigator","userAgent","_data","Data","Buffer","PartitionKey","request_id","isAllowLog","put","getRecordSendUrl","getRecord","kinesisSender","validate","args","makeRecordByWCSApiCall","apiUrl","user_agent","getUserAgent","api","makeRecord","makeRecordByError","errorMessage","errorTrace","uagent","toLocaleLowerCase","search","MESSAGES","IS_END","APP_NAME","WAS_ERROR","UNRESPONSE_HOST","REQUEST_TIMEOUT","PROCEDURE_ERROR","UNSUPPORTED_VERSION","TRANSACTION_FAIL","TRANSACTION_ERROR","UNEXPECTED_ERROR","LOGIN_REQUIRED","DIRECTUPDATE","onReloadApp","appReloadCnt","defaults","reloadAppFlag","interceptors","method","resultResponse","isInternalUrl","isSuccessful","groupCollapsed","groupEnd","errorMessageKey","contentType","isHtmlResponse","setWCSCommonParameter","accptPath","accptPathCd","req_co_cd","isSeteUserIdParam","topCategoryId","didCommonErrorOccur","typeOfResponse","generateError","isErrorMessageThere","handleCommonError","doesCommonErrorContains","errorHandling","withCredentials","arrayFormat","resultPromise","iterable","Array","isArray","obj","spread","delete","patch"],"mappings":"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","file":"js/index.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded CSS chunks\n \tvar installedCssChunks = {\n \t\t\"index\": 0\n \t}\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"index\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({\"index/BaseLayout\":\"index/BaseLayout\",\"thingliveVodDetail\":\"thingliveVodDetail\",\"AppBottomNavi\":\"AppBottomNavi\",\"AppFooter\":\"AppFooter\",\"AppTopButton\":\"AppTopButton\"}[chunkId]||chunkId) + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// mini-css-extract-plugin CSS loading\n \t\tvar cssChunks = {\"thingliveVodDetail\":1,\"AppBottomNavi\":1,\"AppFooter\":1,\"AppTopButton\":1};\n \t\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n \t\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n \t\t\tpromises.push(installedCssChunks[chunkId] = new Promise(function(resolve, reject) {\n \t\t\t\tvar href = \"css/\" + ({\"index/BaseLayout\":\"index/BaseLayout\",\"thingliveVodDetail\":\"thingliveVodDetail\",\"AppBottomNavi\":\"AppBottomNavi\",\"AppFooter\":\"AppFooter\",\"AppTopButton\":\"AppTopButton\"}[chunkId]||chunkId) + \".css\";\n \t\t\t\tvar fullhref = __webpack_require__.p + href;\n \t\t\t\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n \t\t\t\tfor(var i = 0; i < existingLinkTags.length; i++) {\n \t\t\t\t\tvar tag = existingLinkTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n \t\t\t\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return resolve();\n \t\t\t\t}\n \t\t\t\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n \t\t\t\tfor(var i = 0; i < existingStyleTags.length; i++) {\n \t\t\t\t\tvar tag = existingStyleTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\");\n \t\t\t\t\tif(dataHref === href || dataHref === fullhref) return resolve();\n \t\t\t\t}\n \t\t\t\tvar linkTag = document.createElement(\"link\");\n \t\t\t\tlinkTag.rel = \"stylesheet\";\n \t\t\t\tlinkTag.type = \"text/css\";\n \t\t\t\tlinkTag.onload = resolve;\n \t\t\t\tlinkTag.onerror = function(event) {\n \t\t\t\t\tvar request = event && event.target && event.target.src || fullhref;\n \t\t\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + request + \")\");\n \t\t\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n \t\t\t\t\terr.request = request;\n \t\t\t\t\tdelete installedCssChunks[chunkId]\n \t\t\t\t\tlinkTag.parentNode.removeChild(linkTag)\n \t\t\t\t\treject(err);\n \t\t\t\t};\n \t\t\t\tlinkTag.href = fullhref;\n\n \t\t\t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\t\t\thead.appendChild(linkTag);\n \t\t\t}).then(function() {\n \t\t\t\tinstalledCssChunks[chunkId] = 0;\n \t\t\t}));\n \t\t}\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import {\r\n  isOsApp\r\n} from '@utils/commonutil/commonUtil'\r\n\r\n// TODO : AS-IS 에 정의돼있던 상수이며 사용하는 상수만 주석 해제하여 사용 합니다.\r\nconst COMM_CONST = {\r\n  /**\r\n   * Push에서 들어왔을 때 캠페인 ID 셋팅\r\n   *\r\n   * @param {String} campaignId (필수) 캠페인 ID\r\n   */\r\n  setCampaignId: campaignId => {\r\n    COMM_CONST.DEFAULT_PARAMS.campaignId = campaignId\r\n  },\r\n  /**\r\n   * 캠페인 ID 조회\r\n   *\r\n   * @returns {String} 캠페인 ID\r\n   */\r\n  getCampaignId: () => COMM_CONST.DEFAULT_PARAMS.campaignId,\r\n  /**\r\n   * 제휴사 싸이트로 부터 유입되었을 경우, 외부유입경로 설정\r\n   *\r\n   * @param {String} coCd\r\n   */\r\n  setCocd: coCd => {\r\n    COMM_CONST.DEFAULT_PARAMS.coCd = coCd\r\n  },\r\n  /**\r\n   * 외부유입경로 조회\r\n   *\r\n   * @returns {String} 외부유입경로 코드\r\n   */\r\n  getCocd: () => {\r\n    if (COMM_CONST.DEFAULT_PARAMS.coCd === '110' || COMM_CONST.DEFAULT_PARAMS.coCd === '50000') {\r\n      var defaultCocd = COMM_CONST.getWebAppDefaultCocd(isOsApp())\r\n      if (COMM_CONST.DEFAULT_PARAMS.coCd !== defaultCocd) {\r\n        COMM_CONST.setCocd(defaultCocd)\r\n      }\r\n    }\r\n\r\n    return COMM_CONST.DEFAULT_PARAMS.coCd\r\n  },\r\n\r\n  /**\r\n   * 기본 카탈로그 ID\r\n   *\r\n   * @returns {string} 기본 카탈로그 ID\r\n   */\r\n  getDefaultCatalogId: () => {\r\n    return COMM_CONST.DEFAULT_PARAMS.catalogId.base\r\n  },\r\n\r\n  getAcceptPath: () => {\r\n    return isOsApp() ? 501 : 500\r\n  },\r\n\r\n  /**\r\n   * 웹/앱 기본 외부유입경로 코드 조회\r\n   *\r\n   * @param {Boolean|String} isApp 사용자 환경 구분 값. 두 가지 타입. true/false 또는 android/ios 등의 문자열\r\n   * @returns {String} 기본 외부유입경로 코드\r\n   */\r\n  getWebAppDefaultCocd: isApp => {\r\n    if (undefined === isApp || isApp === null) {\r\n      return ''\r\n    } else if (typeof (isApp) === 'boolean') {\r\n      if (isApp) {\r\n        return COMM_CONST.DEFAULT_PARAMS.appCocd\r\n      } else {\r\n        return COMM_CONST.DEFAULT_PARAMS.webCocd\r\n      }\r\n    } else if (typeof (isApp) === 'string') {\r\n      if (isApp === '') {\r\n        return ''\r\n      } else {\r\n        if (isApp === 'android' || isApp === 'ios') {\r\n          return COMM_CONST.DEFAULT_PARAMS.appCocd\r\n        } else {\r\n          return COMM_CONST.DEFAULT_PARAMS.webCocd\r\n        }\r\n      }\r\n    }\r\n\r\n    return ''\r\n  },\r\n\r\n  // NSMALL에서 사용하는 기본 store id 및 language id, catalog Id\r\n  DEFAULT_PARAMS: {\r\n    storeId: 13001,\r\n    langId: -9,\r\n    catalogId: {\r\n      base: 97001,\r\n      mobile: 11111,\r\n      tv: 18151,\r\n      sbook: 18651,\r\n      departmentstore: 23651,\r\n      editStore: 72001, // 편집매장 카달로그 ID\r\n      happydeal: 78501\r\n    },\r\n    busChnId: 'INT',\r\n    coCd: '110', // default value. 외부유입경로.\r\n    webCocd: '110',\r\n    appCocd: '50000',\r\n    campaignId: null,\r\n\r\n    receipt: {\r\n      midx: 'navi_15',\r\n      channel: 'mobile',\r\n      tasknm: 'NSIssueReceiptInfo'\r\n    },\r\n\r\n    receiptApply: {\r\n      tasknm: 'alejandro',\r\n      cnm: 'com.ns.commerce.nsmypage.service.WebServiceClient',\r\n      mnm: 'registCashReceipt'\r\n    },\r\n\r\n    receiptConfirm: {\r\n      selfDealDateStr: '결제 후 48시간 후 확인가능',\r\n      homeTax: 'https://www.hometax.go.kr/'\r\n    }\r\n  },\r\n\r\n  // 로컬 스토리지 키\r\n  STORAGE_KEY: {\r\n    SEARCH_WORD_LIST: 'latelySearchWord', // 최근검색어\r\n    EVENT_POPUP_LOGIN: 'eventPopupLogin', // 이벤트 팝업(로그인시)\r\n    EVENT_POPUP_REGIST: 'eventPopupRegist', // 이벤트 팝업(회원가입시)\r\n    EVENT_POPUP_MAIN: 'eventPopupMain', // 이벤트 팝업(메인화면시)\r\n    EVENT_POPUP_DETAIL: 'eventPopupProductDetail', // 이벤트 팝업(상품상세시)\r\n    EVENT_POPUP_EXHABIT: 'eventPopupExhabition', // 이벤트 팝업(기획전)\r\n    JOIN_TIME: 'jointime', // jihee : 회원가입한 시간(adbrix)\r\n    LNB_LCATEID: 'lnbLcateId', // LNB 쇼핑카테고리\r\n    USER_VISIT_HIS: 'userVistHistory', // 유저 히스토리 데이터\r\n    RVP_VISIT: 'recentlyViewedProductsVisited',\r\n    UUID: 'uuid', // 세션 ID\r\n    APP_RELOAD_CNT: 'appReloadCnt', // 세션 ID\r\n    STORAGE_RESET_REQUIRED: 'storageResetRequired' // 스토리지 갱신 필요 여부\r\n  },\r\n  // 세션 스토리지 키\r\n  SESSION_STORAGE_KEY: {\r\n    MAIN_EVENT_POPUP_DISPLAY: 'MAIN_EVENT_POPUP_DISPLAY',\r\n    ATTRACT_APP_DOWN_BANNER: 'ATTRACT_APP_DOWN_BANNER'\r\n  },\r\n  LOGON_TYPE: {\r\n    NORMAL: 'normal',\r\n    SIMPLE: 'simple',\r\n    TWITTER: 'twitter',\r\n    FACEBOOK: 'facebook',\r\n    NONMEMBER: 'nonmember'\r\n  },\r\n  KEY_CODE: {\r\n    BACK_SPACE: 8,\r\n    LEFT: 37,\r\n    RIGHT: 39,\r\n    DELETE: 46,\r\n    NUM_0: 48,\r\n    NUM_9: 57\r\n  },\r\n  RECEIPT_BUTTON_TEXT: {\r\n    APPLY: '신청하기',\r\n    COMPLETE: '신청완료',\r\n    IMPOSSIBLE: '신청불가',\r\n    CHECK_NUM: '승인번호확인'\r\n  },\r\n  CONFIRM_MESSAGES: {\r\n    PRODUCT_ROW_REMOVE: '선택하신 상품을 삭제하시겠습니까?',\r\n    PRODUCT_ALL_REMOVE: '전체상품을 삭제하시겠습니까?'\r\n  },\r\n  TOAST_MESSAGES: {\r\n    CART_ADD_SUCCESS: '장바구니에 상품이 담겼습니다.',\r\n    CART_ADD_OPTION: '이 상품은 옵션이 있는 상품입니다.\\n옵션을 선택해 주세요.'\r\n  },\r\n  // 외부 유입 경로가 기본값이 아닌 케이스.\r\n  BANNER_HIDE_COCD: [\r\n    '580',\r\n    '479',\r\n    '170',\r\n    '481',\r\n    '513',\r\n    '511',\r\n    '514',\r\n    '522',\r\n    '536',\r\n    '476',\r\n    '483',\r\n    '477',\r\n    '475',\r\n    '508',\r\n    '125',\r\n    '130',\r\n    '133',\r\n    '134',\r\n    '497',\r\n    '850'\r\n  ]\r\n}\r\n\r\nexport default COMM_CONST\r\n","import CONST from '@/common/constants/framework/framework'\r\nimport logUtil from '@frameworks/logUtil'\r\n\r\nconst errorUtil = {\r\n  /**\r\n   * 현재 Url 가져오기\r\n   *\r\n   * @returns {string} 현재 URL\r\n   */\r\n  getCurrentURL () {\r\n    const currentURL = location.href\r\n\r\n    return currentURL\r\n  },\r\n  /**\r\n   * 컴포넌트명 가져오기\r\n   *\r\n   * @param {object} vm - View Model 객체\r\n   * @returns {string} 컴포넌트 name\r\n   */\r\n  getComponentName (vm) {\r\n    let componentName = ''\r\n\r\n    if (vm) {\r\n      componentName = vm.$options.name\r\n    }\r\n\r\n    return componentName\r\n  },\r\n  /**\r\n   * 에러 파라미터 생성\r\n   *\r\n   * @param {Error} error - 오류 객체\r\n   * @param {object} vm - View Model 객체\r\n   * @returns {ErrorLogParam}\r\n   */\r\n  generateErrorParam (error, vm) {\r\n    const { message, stack } = error\r\n    const currentURL = this.getCurrentURL()\r\n    const componentName = this.getComponentName(vm)\r\n\r\n    const params = {\r\n      type: CONST.LOG.MESSAGE.REQUEST.ERROR,\r\n      message,\r\n      trace: stack,\r\n      status: '500',\r\n      page: currentURL,\r\n      view: componentName\r\n    }\r\n\r\n    return params\r\n  },\r\n  /**\r\n   * 공통 에러 기록\r\n   *\r\n   * @param {Error} error - 오류 객체\r\n   * @param {object} vm - View Model 객체\r\n   */\r\n  logError (error, vm) {\r\n    const params = this.generateErrorParam(error, vm)\r\n\r\n    logUtil.sendRecord(CONST.LOG.TYPE.ERROR, params)\r\n  },\r\n  /**\r\n   * 공통 에러 처리\r\n   *\r\n   * @param {object} error - error 객체\r\n   * @param {object} vm - View Model 객체\r\n   */\r\n  handleError (error, vm) {\r\n    this.logError(error, vm)\r\n  }\r\n}\r\n\r\n/**\r\n * 에러 로그용 매개변수 객체\r\n * @typedef {object} ErrorLogParam\r\n * @property {string} type - 에러 타입 ex) CONST.LOG.MESSAGE.REQUEST.ERROR\r\n * @property {string} message - 에러 메시지\r\n * @property {string} trace - 에러 stack\r\n * @property {string} status - 상태 (임시로 '500' 사용)\r\n * @property {string} page - 에러가 발생한 시점의 URL\r\n * @property {string} view - 에러가 발생한 컴포넌트 name\r\n */\r\n\r\nexport default errorUtil\r\n","import {\r\n  isJsonString\r\n} from '@utils/commonutil/commonUtil'\r\nimport COMM_CONST from '@constants/framework/constants'\r\nimport cipherUtil from '@frameworks/cipherUtil'\r\nimport CONST from '@constants/framework/framework'\r\n\r\nconst localStorageUtil = {\r\n  /**\r\n   * localStorage getItem 유틸\r\n   * @param {String} name (필수) 키 값\r\n   * @returns {*} LocalStorage 키에 해당하는 값\r\n   */\r\n  get: name => {\r\n    let result = null\r\n\r\n    if (localStorage !== null) {\r\n      result = localStorage.getItem(name)\r\n    }\r\n\r\n    if (!result) {\r\n      return result\r\n    }\r\n\r\n    // 복호화\r\n    if (CONST.IS_CIPHER_ON_STORAGE) {\r\n      result = cipherUtil.decryptLightly(result)\r\n    }\r\n\r\n    if (isJsonString(result)) {\r\n      result = JSON.parse(result)\r\n    }\r\n\r\n    return result\r\n  },\r\n  /**\r\n   * localStorage setItem 유틸\r\n   * @param {String} name (필수) key (@utils/constants -> COMM_CONST.STORAGE_KEY 객체 안에 정의)\r\n   * @param {*} val (필수) value\r\n   */\r\n  set: (name, val) => {\r\n    let result\r\n\r\n    if (typeof val === 'string') {\r\n      result = val\r\n    } else {\r\n      result = JSON.stringify(val)\r\n    }\r\n\r\n    // 암호화\r\n    if (CONST.IS_CIPHER_ON_STORAGE) {\r\n      result = cipherUtil.encryptLightly(result)\r\n    }\r\n\r\n    if (localStorage !== null) {\r\n      localStorage.setItem(name, result)\r\n    }\r\n  },\r\n  /**\r\n   * localStorage removeItem 유틸\r\n   * @param {String} name (필수) 삭제할 키 값\r\n   */\r\n  del: name => {\r\n    localStorage.setItem(name, '') // NSSR-9277 모바일 크롬버젼에 따른 자동로그인 오류\r\n\r\n    if (localStorage.getItem(name) !== '') {\r\n      localStorage.removeItem(name)\r\n    }\r\n  },\r\n  /**\r\n   * 최근 검색어 설정\r\n   * @param {Object} searchWord 최근검색어 객체\r\n   * @param {Number} [maxCnt=100] 검색어 최대 저장 개수\r\n   */\r\n  setSearchWord (searchWord, maxCnt = 100) {\r\n    const name = COMM_CONST.STORAGE_KEY.SEARCH_WORD_LIST\r\n\r\n    let searchWords = this.get(name)\r\n\r\n    if (searchWords === null) {\r\n      searchWords = []\r\n    }\r\n\r\n    const { keyword } = searchWord\r\n    if (this.validateDuplicateKeyword(searchWords, keyword)) {\r\n      return\r\n    }\r\n\r\n    this.handleExceedingMaxCnt(searchWords, maxCnt)\r\n\r\n    searchWords.push(searchWord)\r\n\r\n    this.set(name, searchWords)\r\n  },\r\n  /**\r\n   * 검색어 중복 여부 반환\r\n   * @param {Object} searchWords 검색어 리스트\r\n   * @param {String} keyword 검색 키워드\r\n   * @returns {Boolean}\r\n   */\r\n  validateDuplicateKeyword (searchWords, keyword) {\r\n    let isDuplicated = false\r\n\r\n    for (const searchWord of searchWords) {\r\n      if (searchWord.keyword === keyword) {\r\n        isDuplicated = true\r\n      }\r\n    }\r\n\r\n    return isDuplicated\r\n  },\r\n  /**\r\n   * 검색어 초과 저장 대응\r\n   * @param {Object} searchWords 검색어 리스트\r\n   * @param {Number} maxCnt 검색어 최대 저장 갯수\r\n   */\r\n  handleExceedingMaxCnt (searchWords, maxCnt) {\r\n    if (searchWords.length >= maxCnt) {\r\n      searchWords.shift()\r\n    }\r\n  },\r\n  /**\r\n   * 키워드 기반 검색어 삭제\r\n   * @param {String} keyword 검색어 키워드\r\n   */\r\n  deleteSearchWordByKeyword (keyword) {\r\n    const name = COMM_CONST.STORAGE_KEY.SEARCH_WORD_LIST\r\n\r\n    const searchWords = this.get(name)\r\n\r\n    const result = searchWords.filter(searchWord => {\r\n      if (searchWord.keyword !== keyword) {\r\n        return searchWord\r\n      }\r\n    })\r\n\r\n    this.set(name, result)\r\n  }\r\n}\r\n\r\nexport default localStorageUtil\r\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=scss&\"","\r\n// 미디어 링크\r\nconst mediaLink = {\r\n  path: '/',\r\n  children: [{\r\n    path: '',\r\n    name: 'thingliveVodDetail',\r\n    component: () => import(/* webpackChunkName: \"thingliveVodDetail\" */ '@/views/media/ThingliveVodDetail'),\r\n    meta: { title: '테스트', layout: 'LayoutLnb', depth: '띵라이브>지난방송보기' }\r\n  }\r\n  ]\r\n}\r\n\r\nexport default mediaLink\r\n","import Vue from 'vue'\r\nimport VueRouter from 'vue-router'\r\n\r\nimport CONST from '@constants/framework/framework'\r\nimport loginUtil from '@utils/loginUtil'\r\nimport checkUpdateUtil from '@/common/utils/checkUpdateUtil'\r\n\r\nimport mediaLink from '@/router/modules/mediaLink' // 미디어 링크\r\nimport {\r\n  isOsApp\r\n} from '@utils/commonutil/commonUtil'\r\nimport NATIVE_CONST from '@constants/framework/native'\r\nimport cookieUtil from '@frameworks/cookieUtil'\r\nimport localStorageUtil from '@frameworks/localStorageUtil'\r\n\r\nVue.use(VueRouter)\r\n\r\n// 라우터 객체 생성\r\nconst routes = [\r\n  mediaLink\r\n]\r\n\r\nroutes.forEach(route => {\r\n  // 기존에 정의된 컴포넌트가 없을때만 기본 레이아웃 컴포넌트 정의\r\n  if (!route.component) {\r\n    route.component = () => import(/* webpackChunkName: \"index/BaseLayout\" */ '@components/layouts/BaseLayout')\r\n  }\r\n})\r\n\r\nconst router = new VueRouter({\r\n  routes,\r\n  mode: 'history',\r\n  base: '/',\r\n\r\n  /**\r\n   * 스크롤 위치 지정 (라우트 변경 시점)\r\n   * 라우트 객체 문서 https://router.vuejs.org/api/#route-object-properties\r\n   * @param {Object} to 라우트 객체 (목적지)\r\n   * @param {Object} from 라우트 객체 (출발지)\r\n   * @param {Object} savedPosition client x, y 좌표 객체\r\n   * @returns {Object} client x, y 좌표 객체\r\n   */\r\n  scrollBehavior (to, from, savedPosition) {\r\n    if (savedPosition) {\r\n      // iOS에서 scrollBehavior 에 savedPositon.y가 0으로 저장되는 이슈 대응\r\n      if (savedPosition.y === 0) {\r\n        savedPosition = to.meta.savedPosition\r\n      }\r\n\r\n      // 저장된 스크롤 위치로 이동\r\n      window.scroll(0, savedPosition.y)\r\n\r\n      // 스크롤 위치 보정 시도\r\n      if (savedPosition.y !== window.pageYOffset) {\r\n        let retryCount = 3 // 스크롤 이동 재시도 남은 횟수 (3회 시도)\r\n        const debounceTimer = setInterval(() => {\r\n          if (retryCount > 0) {\r\n            if (savedPosition.y === window.pageYOffset) {\r\n            // 저장된 스크롤 위치에 도달했으면 interval 호출 종료\r\n              clearInterval(debounceTimer)\r\n            } else {\r\n            // 저장된 스크롤 위치에 도달할 때까지 interval 호출로 이동 (무한 스크롤로 다음 데이터를 조회하기 위함)\r\n              window.scroll(0, savedPosition.y)\r\n              retryCount--\r\n            }\r\n          } else {\r\n          // 3회 시도 후에도 저장된 스크롤 위치에 도달하지 못하면 최상단으로 이동\r\n            if (savedPosition.y !== window.pageYOffset) {\r\n              window.scroll(0, 0)\r\n              // 저장된 스크롤 위치에 도달했으면 interval 호출 종료\r\n              clearInterval(debounceTimer)\r\n            }\r\n          }\r\n        }, 300)\r\n      }\r\n    } else {\r\n      window.scroll(0, 0)\r\n    }\r\n\r\n    to.meta.hasSavedPosition = Boolean(savedPosition)\r\n  }\r\n})\r\n\r\n/**\r\n * 네비게이션 가드\r\n * route 이동 전\r\n * 라우트 객체 문서 https://router.vuejs.org/api/#route-object-properties\r\n *\r\n * @param {object} to 라우트 객체 (목적지)\r\n * @param {object} from 라우트 객체 (출발지)\r\n * @param {function} next\r\n * @returns {obejct}\r\n */\r\nrouter.beforeEach((to, from, next) => {\r\n  // iOS에서 scrollBehavior 에 savedPositon.y가 0으로 저장되는 이슈 대응\r\n  from.meta.savedPosition = { x: window.pageXOffset, y: window.pageYOffset }\r\n\r\n  // 메인으로 리다이렉트 되는 route 이동 경로 정의\r\n  const MAIN_REDIRECT_CASES = [{\r\n    // 주문완료 -> 주문서\r\n    from: 'orderComplete',\r\n    to: 'orderSheet'\r\n  }, {\r\n    // 상담신청 주문완료 -> 상담신청 주문서\r\n    from: 'orderConsultComplete',\r\n    to: 'orderConsultSheet'\r\n  }, {\r\n    // 페이스북 회원가입완료 -> 페이북 회원기입\r\n    from: 'facebookJoinComplete',\r\n    to: 'facebookJoin'\r\n  }]\r\n\r\n  // 메인으로 리다이렉트 되는 route 이동이면 메인으로 리다이렉트\r\n  if (MAIN_REDIRECT_CASES.some(route => route.from === from.name && route.to === to.name)) {\r\n    return next({ name: 'storeHome' })\r\n  }\r\n\r\n  const isLoggedIn = loginUtil.isLoggedIn()\r\n\r\n  if (isLoggedIn) {\r\n    /**\r\n     * 로그인 유저 검증 라우트\r\n     * meta 데이터에서 비밀번호 인증 필요 여부를 체크합니다.\r\n     * ex) meta: { title: '회원정보수정', requiresAuth: true, requiresPasswordAuth: true }\r\n     */\r\n    if (to.matched.some(record => record.meta.forbidsLoginUser)) {\r\n      if (isOsApp()) {\r\n        return next()\r\n      } else {\r\n        return next({ name: 'storeHome' })\r\n      }\r\n    } else if (to.matched.some(record => record.meta.requiresPasswordAuth)) {\r\n      // 비밀번호 인증 완료 쿠키 검증\r\n      if (cookieUtil.getCookie('securityVerification') !== 'Y') {\r\n        return next({\r\n          name: 'memberModifyIntro',\r\n          replace: true\r\n        })\r\n      }\r\n    }\r\n  } else {\r\n    /**\r\n     * 비로그인 유저 검증 라우트\r\n     * meta 데이터에서 인증 필요 여부를 체크합니다.\r\n     * ex) meta: { title: '마이페이지', requiresAuth: true }\r\n     */\r\n    if (to.matched.some(record => record.meta.requiresAuth)) {\r\n      // 로그인 후 이동할 이전 라우트 저장\r\n      if (isOsApp()) {\r\n        localStorageUtil.set(NATIVE_CONST.STORAGE_KEY.LOGIN_REDIRECT_PATH, to.path)\r\n        window.returnRoute = to\r\n      } else {\r\n      }\r\n\r\n      return next({ name: 'memberLogin' })\r\n    }\r\n  }\r\n\r\n  // 업데이트 체크 초기화 작업\r\n  checkUpdateUtil.clearTime()\r\n  checkUpdateUtil.clearCount()\r\n\r\n  // 일반 라우트\r\n  return next()\r\n})\r\n\r\n/**\r\n * router 에러 처리\r\n *\r\n * @param {object} error 에러 객체\r\n */\r\nrouter.onError(error => {\r\n  // 배포에 따른 chunk 불일치 대응\r\n  if (/Loading chunk */i.test(error.message)) {\r\n    window.location.reload()\r\n  }\r\n})\r\n\r\n/** 유닛 테스트 환경에서 router.push 재정의 */\r\nif (CONST.IS_TEST_REPORT) {\r\n  router.push = () => new Promise(resolve => {\r\n    resolve()\r\n  })\r\n}\r\n\r\nexport default router\r\n","import axios from 'axios'\r\nimport CONST from '@/common/constants/framework/framework'\r\nimport localStorageUtil from '@frameworks/localStorageUtil'\r\n\r\nconst checkUpdateUtil = {\r\n  /**\r\n   * Vue 실행시 최초 'index.html'에 대한 LastModified 값 LocalStorage에 저장 처리\r\n   */\r\n  saveLatest () {\r\n    axios.head('/index.html').then(response => {\r\n      const lastModified = response.headers[CONST.UPDATE.KEY.SEPARATOR]\r\n      localStorageUtil.set(CONST.UPDATE.KEY.SEPARATOR, lastModified)\r\n    })\r\n  },\r\n  /**\r\n   * 업데이트 체크 카운트를 0으로 초기화\r\n   */\r\n  clearCount () {\r\n    localStorageUtil.set(CONST.UPDATE.KEY.COUNT, 0)\r\n  },\r\n  /**\r\n   * 카운트 증감 처리\r\n   */\r\n  setCount () {\r\n    let count = localStorageUtil.get(CONST.UPDATE.KEY.COUNT)\r\n    if (count !== undefined) {\r\n      localStorageUtil.set(CONST.UPDATE.KEY.COUNT, ++count)\r\n    }\r\n  },\r\n  /**\r\n   * 현재 카운트 가져오기\r\n   */\r\n  getCount () {\r\n    return localStorageUtil.get(CONST.UPDATE.KEY.COUNT)\r\n  },\r\n  /**\r\n   * 최초 요청시간 초기화\r\n   */\r\n  clearTime () {\r\n    localStorageUtil.set(CONST.UPDATE.KEY.TIME, undefined)\r\n  },\r\n  /**\r\n   * 최초 요청 현재시간 설정\r\n   */\r\n  setCurrentTime () {\r\n    localStorageUtil.set(CONST.UPDATE.KEY.TIME, new Date().getTime())\r\n  },\r\n  /**\r\n   * 마지막 요청시간 가져오기\r\n   */\r\n  getLastRequestTime () {\r\n    return localStorageUtil.get(CONST.UPDATE.KEY.TIME)\r\n  },\r\n  /**\r\n   * 마지막 요청시간과 비교할 현재시간 가져오기\r\n   */\r\n  getCurrentCompareTime () {\r\n    const currentTime = new Date()\r\n    currentTime.setSeconds(currentTime.getSeconds() - CONST.UPDATE.MAXIMUM_WAIT_TIME)\r\n    return currentTime.getTime()\r\n  },\r\n  /**\r\n   * LocalStorage에 저장된 LastModified값과 최신 값을 비교하여 업데이트(새로고침) 처리\r\n   *\r\n   * @param {string} type 업데이트 체크 방식 `CONST.UPDATE.CHECK_TYPE.COUNT`, `CONST.UPDATE.CHECK_TYPE.TIME`\r\n   */\r\n  check (type) {\r\n    if (type === CONST.UPDATE.CHECK_TYPE.COUNT) {\r\n      const count = checkUpdateUtil.getCount()\r\n      if (count !== undefined) {\r\n        if (count > CONST.UPDATE.MAXIMUM_COUNT) {\r\n          return\r\n        }\r\n      }\r\n    } else if (type === CONST.UPDATE.CHECK_TYPE.TIME) {\r\n      const lastRequestTime = checkUpdateUtil.getLastRequestTime()\r\n      if (lastRequestTime !== 'undefined') {\r\n        const compareTime = checkUpdateUtil.getCurrentCompareTime()\r\n        if (lastRequestTime > compareTime) {\r\n          return\r\n        } else {\r\n          checkUpdateUtil.setCurrentTime()\r\n        }\r\n      }\r\n    }\r\n\r\n    axios.head('/index.html').then(response => {\r\n      const LatestLastModified = localStorageUtil.get(CONST.UPDATE.KEY.SEPARATOR)\r\n      const lastModified = response.headers[CONST.UPDATE.KEY.SEPARATOR]\r\n\r\n      if (type === CONST.UPDATE.CHECK_TYPE.COUNT) {\r\n        checkUpdateUtil.setCount()\r\n      } else if (type === CONST.UPDATE.CHECK_TYPE.TIME) {\r\n        const lastRequestTime = checkUpdateUtil.getLastRequestTime()\r\n        if (lastRequestTime === 'undefined') {\r\n          checkUpdateUtil.setCurrentTime()\r\n        }\r\n      }\r\n\r\n      // 저장된 값이 없을 경우\r\n      if (lastModified !== undefined) {\r\n        // (업데이트필요) 저장된 값과 최신값이 다른 경우\r\n        if (LatestLastModified !== lastModified) {\r\n          localStorageUtil.set(CONST.UPDATE.KEY.SEPARATOR, lastModified)\r\n          if (window && window.location && window.location.reload) {\r\n            window.location.reload(true)\r\n          }\r\n        }\r\n      } else {\r\n        checkUpdateUtil.saveLatest()\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport default checkUpdateUtil\r\n","import {\r\n  isJsonString\r\n} from '@utils/commonutil/commonUtil'\r\nimport cipherUtil from '@frameworks/cipherUtil'\r\nimport CONST from '@constants/framework/framework'\r\n\r\n//  sessionStorage 관련 함수\r\nconst sessionStorageUtil = {\r\n  /**\r\n   * sessionStorage getItem 유틸\r\n   * @param {String} name (필수) 키 값\r\n   * @returns {*} sessionStorage 키에 해당하는 값\r\n   */\r\n  get: name => {\r\n    let result = null\r\n\r\n    result = sessionStorage.getItem(name)\r\n\r\n    if (!result) {\r\n      return result\r\n    }\r\n\r\n    // 복호화\r\n    if (CONST.IS_CIPHER_ON_STORAGE) {\r\n      result = cipherUtil.decryptLightly(result)\r\n    }\r\n\r\n    if (isJsonString(result)) {\r\n      result = JSON.parse(result)\r\n    }\r\n\r\n    return result\r\n  },\r\n  /**\r\n   * sessionStorage setItem 유틸\r\n   * @param {String} name (필수) key (@utils/constants -> COMM_CONST.STORAGE_KEY 객체 안에 정의)\r\n   * @param {*} val (필수) value\r\n   */\r\n  set: (name, val) => {\r\n    let result\r\n\r\n    if (typeof val === 'string') {\r\n      result = val\r\n    } else {\r\n      result = JSON.stringify(val)\r\n    }\r\n\r\n    // 암호화\r\n    if (CONST.IS_CIPHER_ON_STORAGE) {\r\n      result = cipherUtil.encryptLightly(result)\r\n    }\r\n\r\n    sessionStorage.setItem(name, result)\r\n  },\r\n  /**\r\n   * sessionStorage에서 삭제\r\n   * @param {String} name (필수) 삭제할 키 값\r\n   */\r\n  del: name => {\r\n    sessionStorage.setItem(name, '') // NSSR-9277 모바일 크롬버젼에 따른 자동로그인 오류\r\n\r\n    if (sessionStorage.getItem(name) !== '') {\r\n      sessionStorage.removeItem(name)\r\n    }\r\n  },\r\n  clear: () => {\r\n    sessionStorage.clear()\r\n  }\r\n}\r\n\r\nexport default sessionStorageUtil\r\n","/**\r\n * json 형변환 가능한 문자열인지 검증\r\n *\r\n * @param {string} text 문자열\r\n * @returns {boolean}\r\n */\r\nfunction isJsonString (text) {\r\n  try {\r\n    const parsed = JSON.parse(text)\r\n\r\n    return typeof (parsed) === 'object'\r\n  } catch (e) {\r\n    return false\r\n  }\r\n}\r\n\r\nexport default isJsonString\r\n","import NATIVE_CONST from '@/common/constants/framework/native'\r\nimport cookieUtil from '@frameworks/cookieUtil'\r\nimport {\r\n  isNull,\r\n  viewType\r\n} from '@utils/commonutil/commonUtil'\r\n\r\nconst nativeUtil = {\r\n  /**\r\n   * Home으로 이동\r\n  * @param {String} loginRedirectName 로그인 후 리다이렉트할 명\r\n    */\r\n  goHome () {\r\n    if (window.NSHub !== undefined) {\r\n      // Home으로 이동\r\n      try {\r\n        window.NSHub.naGoHome()\r\n      } catch (e) {\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * Back으로 이동\r\n   */\r\n  goBack () {\r\n    if (window.NSHub !== undefined) {\r\n      try {\r\n        window.NSHub.naBack()\r\n      } catch (e) {\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * 웹뷰 닫기\r\n   */\r\n  closeWebView () {\r\n    if (window.NSHub !== undefined) {\r\n      try {\r\n        window.NSHub.naCloseWebView()\r\n      } catch (e) {\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * 로그인페이지 이동\r\n   */\r\n  presentLogin () {\r\n    if (window.NSHub !== undefined) {\r\n      try {\r\n        window.NSHub.naPresentLogin(NATIVE_CONST.NATIVE_URL.LOGIN)\r\n      } catch (e) {\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * 로그인 후 회원정보 전달\r\n   * @param {Object} memberInfo 회원정보\r\n   */\r\n  setLoginMemberInfo (memberInfo) {\r\n    if (window.NSHub !== undefined) {\r\n      try {\r\n        window.NSHub.naSetLoginMemberInfo(memberInfo)\r\n      } catch (e) {\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * 로그아웃\r\n   */\r\n  logOut () {\r\n    if (window.NSHub !== undefined) {\r\n      try {\r\n        window.NSHub.naLogOut()\r\n      } catch (e) {\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * URL 이동\r\n   * @param {String} url 이동할 URL\r\n   */\r\n  gotoURL (url) {\r\n    if (window.NSHub !== undefined) {\r\n      const APP_MOBILE_HOST = process.env.VUE_APP_MOBILE_HOST\r\n      if (url.indexOf('nsmall.com') > 0) {\r\n        try {\r\n          window.NSHub.naPresentLogin(url)\r\n        } catch (e) {\r\n        }\r\n      } else {\r\n        try {\r\n          window.NSHub.naPresentLogin(APP_MOBILE_HOST + url)\r\n        } catch (e) {\r\n        }\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * 지정된 URL로 이동(공통웹뷰)\r\n   * @param {String} url full URL\r\n   */\r\n  gotoFullURL (url) {\r\n    if (window.NSHub !== undefined) {\r\n      try {\r\n        window.NSHub.naGotoFullURL(url)\r\n      } catch (e) {\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * Side메뉴 감추기\r\n   */\r\n  lnbHide () {\r\n    if (window.NSHub !== undefined) {\r\n      try {\r\n        window.NSHub.naLnbHide()\r\n      } catch (e) {\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * 토스트 메시지\r\n   * @param {String} msg 메시지\r\n   */\r\n  showToast (msg) {\r\n    if (window.NSHub !== undefined) {\r\n      try {\r\n        window.NSHub.naShowToast(msg)\r\n      } catch (e) {\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * 주문화면으로 이동\r\n   * @param {String} jsonString 주문정보 JSON 스트링\r\n   */\r\n  gotoOrderSheet (jsonString) {\r\n    if (window.NSHub !== undefined) {\r\n      cookieUtil.setCookie(NATIVE_CONST.STORAGE_KEY.ORDER_PARAMS, jsonString)\r\n      try {\r\n        window.NSHub.naGoOrderSheet(NATIVE_CONST.NATIVE_URL.ORDER_SHEET, jsonString)\r\n      } catch (e) {\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * 주문정보 가져오기\r\n   * @return {Object} 주문정보 JSON Object\r\n   */\r\n  getOrderParams () {\r\n    if (window.NSHub !== undefined) {\r\n      const strOrderParams = cookieUtil.getCookie(NATIVE_CONST.STORAGE_KEY.ORDER_PARAMS)\r\n      if (!isNull(strOrderParams)) {\r\n        const orderParams = JSON.parse(strOrderParams)\r\n        cookieUtil.deleteCookie(NATIVE_CONST.STORAGE_KEY.ORDER_PARAMS)\r\n        return orderParams\r\n      }\r\n      return {}\r\n    }\r\n  },\r\n  /**\r\n   * 상담주문화면으로 이동\r\n   * @param {String} jsonString 주문정보 JSON 스트링\r\n   */\r\n  gotoOrderConsult (jsonString) {\r\n    if (window.NSHub !== undefined) {\r\n      cookieUtil.setCookie(NATIVE_CONST.STORAGE_KEY.ORDER_PARAMS, jsonString)\r\n      try {\r\n        window.NSHub.naGoOrderConsult(NATIVE_CONST.NATIVE_URL.ORDER_CONSULT, jsonString)\r\n      } catch (e) {\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * 검색화면으로 이동\r\n   */\r\n  gotoSearch () {\r\n    if (window.NSHub !== undefined) {\r\n      try {\r\n        window.NSHub.naPresentLogin(NATIVE_CONST.NATIVE_URL.SEARCH)\r\n      } catch (e) {\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * 장바구니로 이동\r\n   */\r\n  gotoCartList () {\r\n    if (window.NSHub !== undefined) {\r\n      try {\r\n        window.NSHub.naPresentLogin(NATIVE_CONST.NATIVE_URL.CART_LIST)\r\n      } catch (e) {\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * App 버전 구하기\r\n   * @return {String} appVersion 앱버전\r\n   */\r\n  getAppVersion () {\r\n    if (window.NSHub !== undefined) {\r\n      try {\r\n        const appVersion = window.NSHub.naGetAppVersion()\r\n        return appVersion\r\n      } catch (e) {\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * OS 버전 구하기\r\n   * @param {String} callbackFunction 콜백함수명\r\n   */\r\n  getOSVersion (callbackFunction) {\r\n    if (window.NSHub !== undefined) {\r\n      try {\r\n        window.NSHub.naGetOSVersion(callbackFunction)\r\n      } catch (e) {\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * apple로그인 수행\r\n   * @param {String} callbackFunction 콜백함수명\r\n   */\r\n  doAppleLogin (callbackFunction) {\r\n    if (window.NSHub !== undefined) {\r\n      try {\r\n        window.NSHub.naDoAppleLogin(callbackFunction)\r\n      } catch (e) {\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * 설정창 오픈\r\n   */\r\n  openConfigWindow () {\r\n    if (window.NSHub !== undefined) {\r\n      try {\r\n        window.NSHub.naOpenConfigWindow()\r\n      } catch (e) {\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * 쇼핑 알림창 오픈\r\n   */\r\n  openPushHistoryWindow () {\r\n    if (window.NSHub !== undefined) {\r\n      try {\r\n        window.NSHub.naOpenPushHistoryWindow()\r\n      } catch (e) {\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * Web View All Refresh\r\n   */\r\n  refreshAll () {\r\n    if (window.NSHub !== undefined) {\r\n      try {\r\n        window.NSHub.naRefreshAll()\r\n      } catch (e) {\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * 해피딜 홈으로 이동\r\n   */\r\n  goHappyDealHome () {\r\n    if (window.NSHub !== undefined) {\r\n      try {\r\n        window.NSHub.naGoHappyDealHome()\r\n      } catch (e) {\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * 편성표 홈으로 이동\r\n   * @param {String} jsonString 파라미터\r\n   */\r\n  goScheduleHome (jsonString) {\r\n    if (window.NSHub !== undefined) {\r\n      try {\r\n        window.NSHub.naGoScheduleHome(jsonString)\r\n      } catch (e) {\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * TV쇼핑 홈으로 이동\r\n   */\r\n  goTVShoppingHome () {\r\n    if (window.NSHub !== undefined) {\r\n      try {\r\n        window.NSHub.naGoTVShoppingHome()\r\n      } catch (e) {\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * SHOP+ 홈으로 이동\r\n   */\r\n  goShopPlusHome () {\r\n    if (window.NSHub !== undefined) {\r\n      try {\r\n        window.NSHub.naGoShopPlusHome()\r\n      } catch (e) {\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * 편성매장 홈으로 이동\r\n   * @param {String} contentsId 매장 ID\r\n   */\r\n  goESpotHome (contentsId) {\r\n    if (window.NSHub !== undefined) {\r\n      try {\r\n        window.NSHub.naGoESpotHome(contentsId)\r\n      } catch (e) {\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * 혜택쿠폰 홈으로 이동\r\n   */\r\n  goBenefitCouponHome () {\r\n    if (window.NSHub !== undefined) {\r\n      try {\r\n        window.NSHub.naGoBenefitCouponHome()\r\n      } catch (e) {\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * 최초 호출시 'Y'리턴 그 외는 'N'리턴(APP 실행시 자동 로그인 체크)\r\n   * @param {String} callbackFunction 콜백함수명\r\n   */\r\n  isAppFirstLogin (callbackFunction) {\r\n    if (window.NSHub !== undefined) {\r\n      try {\r\n        window.NSHub.naIsAppFirstLogin(callbackFunction)\r\n      } catch (e) {\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * wifi 연결상태 확인\r\n   * @param {String} callbackFunction 콜백함수명\r\n   */\r\n  isWifiConnected (callbackFunction) {\r\n    if (window.NSHub !== undefined) {\r\n      try {\r\n        window.NSHub.naIsWifiConnected(callbackFunction)\r\n      } catch (e) {\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * 구글 스마트락에 사용자 정보 요청\r\n   * @param {String} jsonString 사용자 정보 JSON 스트링\r\n   * @param {String} callbackFunction 콜백함수명\r\n   */\r\n  requestCredentials (jsonString, callbackFunction) {\r\n    if (window.NSHub !== undefined) {\r\n      try {\r\n        window.NSHub.naRequestCredentials(jsonString, callbackFunction)\r\n      } catch (e) {\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * 구글 스마트락에 사용자 정보 저장\r\n   * @param {String} id 로그인 ID\r\n   * @param {String} pw 로그인 PW\r\n   */\r\n  saveCredential (id, pw) {\r\n    if (window.NSHub !== undefined) {\r\n      try {\r\n        window.NSHub.naSaveCredential(id, pw)\r\n      } catch (e) {\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * 구글 스마트락에 사용자 정보 저장 시도 2\r\n   * @param {String} id 로그인 ID\r\n   * @param {String} pw 로그인 PW\r\n   */\r\n  saveCredentialExcep (id, pw) {\r\n    if (window.NSHub !== undefined) {\r\n      try {\r\n        window.NSHub.naSaveCredentialExcep(id, pw)\r\n      } catch (e) {\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * 구글 스마트락에 저장된 사용자 아이디 가져옴\r\n   * @param {String} callbackFunction 콜백함수명\r\n   */\r\n  loadHint (callbackFunction) {\r\n    if (window.NSHub !== undefined) {\r\n      try {\r\n        window.NSHub.naLoadHint(callbackFunction)\r\n      } catch (e) {\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * 사용자 정보 요청 중단\r\n   */\r\n  stopCredential () {\r\n    if (window.NSHub !== undefined) {\r\n      try {\r\n        window.NSHub.naStopCredential()\r\n      } catch (e) {\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * PUSH UUID get\r\n   * @param {String} callbackFunction 콜백함수명\r\n   */\r\n  getPushUUID (callbackFunction) {\r\n    if (window.NSHub !== undefined) {\r\n      try {\r\n        window.NSHub.naGetPushUUID(callbackFunction)\r\n      } catch (e) {\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * 구글 스마트락 사용자 정보 삭제\r\n   */\r\n  deleteCredential () {\r\n    if (window.NSHub !== undefined) {\r\n      try {\r\n        window.NSHub.naDeleteCredential()\r\n      } catch (e) {\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * 스펙트라 상담톡 호출\r\n   * @param {String} loadURL 호출URL\r\n   * @param {String} customerId 고객ID\r\n   */\r\n  openEnomixTalk (loadURL, customerId) {\r\n    if (window.NSHub !== undefined) {\r\n      try {\r\n        window.NSHub.naOpenEnomixTalk(loadURL, customerId)\r\n      } catch (e) {\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * 페이코 로그인\r\n   * @param {String} action 로그인, 로그아웃 구분\r\n   * @param {String} callbackFunction 콜백함수명\r\n   * @param {Object} params 파라미터\r\n   */\r\n  doPaycoLogin (action, callbackFunction, params) {\r\n    if (window.NSHub !== undefined) {\r\n      try {\r\n        window.NSHub.naPaycoLogin(action, callbackFunction, params)\r\n      } catch (e) {\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * 카카오 로그인\r\n   * @param {String} action 로그인, 로그아웃 구분\r\n   * @param {String} callbackFunction 콜백함수명\r\n   * @param {Object} params 파라미터\r\n   */\r\n  doKakaoLogin (action, callbackFunction, params) {\r\n    if (window.NSHub !== undefined) {\r\n      if (viewType() === 'android') {\r\n        try {\r\n          window.NSHub.naKakaoLogin(action, callbackFunction, params)\r\n        } catch (e) {\r\n        }\r\n      } else {\r\n        try {\r\n          window.NSHub.naKakaoLogin(action, callbackFunction)\r\n        } catch (e) {\r\n        }\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * 카카오톡 링크\r\n   * @param {Object} jsonString 파라미터\r\n   */\r\n  doShareLink (jsonString) {\r\n    if (window.NSHub !== undefined) {\r\n      try {\r\n        window.NSHub.naDoShareLink(jsonString)\r\n      } catch (e) {\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * 최근본 상품 리스트(14일) set\r\n   * @param {String} jsonString 파라미터\r\n   */\r\n  setRecentViewedProducts (jsonString) {\r\n    if (window.NSHub !== undefined) {\r\n      try {\r\n        window.NSHub.naSetRecentViewedProducts(jsonString)\r\n      } catch (e) {\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * 백버턴 유무 set\r\n   * @param {String} backBtnYn 백버턴 유무 파라미터\r\n   */\r\n  setBackBtnYn (backBtnYn) {\r\n    if (window.NSHub !== undefined) {\r\n      try {\r\n        window.NSHub.naSetBackBtnYn(backBtnYn)\r\n      } catch (e) {\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * 하단 메뉴 유무 set\r\n   * @param {String} bottomNaviYn 하단 메뉴 유무 파라미터\r\n   */\r\n  setBottomNaviYn (bottomNaviYn) {\r\n    if (window.NSHub !== undefined) {\r\n      try {\r\n        window.NSHub.naSetBottomNaviYn(bottomNaviYn)\r\n      } catch (e) {\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * confirm 질문 alert\r\n   * @param {String} params 파라미터\r\n   * @param {String} callbackFunction 콜백 함수\r\n   */\r\n  showAlert (params, callbackFunction) {\r\n    if (window.NSHub !== undefined) {\r\n      try {\r\n        window.NSHub.naShowAlert(params, callbackFunction)\r\n      } catch (e) {\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * 장바구니 카운트 조회 set\r\n   * @param {String} jsonString 파라미터 장바구니 카운트\r\n   */\r\n  setCartCnt (jsonString) {\r\n    if (window.NSHub !== undefined) {\r\n      try {\r\n        window.NSHub.naSetCartCnt(jsonString)\r\n      } catch (e) {\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * 상품 장바구니 카운트 담기 결과\r\n   * @param {String} resultYn 파라미터 장바구니 카운트\r\n   */\r\n  setAddCartResult (resultYn) {\r\n    if (window.NSHub !== undefined) {\r\n      try {\r\n        window.NSHub.naSetAddCartResult(resultYn)\r\n      } catch (e) {\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * Native에서 체크를 위한 경로 set\r\n   * @param {String}  routePath 경로 파라미터\r\n   */\r\n  setRoutePath (routePath) {\r\n    if (window.NSHub !== undefined) {\r\n      try {\r\n        window.NSHub.naSetRoutePath(routePath)\r\n      } catch (e) {\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * 모바일 결제요청\r\n   * @param {String}  url 경로 파라미터\r\n   * @param {String} callbackSuccess 콜백 성공함수\r\n   * @param {String} callbackFail 콜백 실패함수\r\n   */\r\n  openCert (url, callbackSuccess, callbackFail) {\r\n    if (window.NSHub !== undefined) {\r\n      try {\r\n        window.NSHub.naOpenCert(url, callbackSuccess, callbackFail)\r\n      } catch (e) {\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * 쇼핑알람 카운트\r\n   * @param {String} callbackFunc 콜백 실패함수\r\n   */\r\n  getShoppingAlarmCount (callbackFunc) {\r\n    if (window.NSHub !== undefined) {\r\n      try {\r\n        window.NSHub.naGetShoppingAlarmCount(callbackFunc)\r\n      } catch (e) {\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * 푸시 수신동의 여부\r\n   * @param {String} jsonString 파라미터\r\n   * @param {String} callbackFunc 콜백 함수\r\n   */\r\n  getPushAgreeYn (jsonString, callbackFunc) {\r\n    if (window.NSHub !== undefined) {\r\n      try {\r\n        window.NSHub.naGetPushAgreeYn(jsonString, callbackFunc)\r\n      } catch (e) {\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * URL 웹브라우져 오픈\r\n   * @param {String} url 파라미터\r\n   */\r\n  gotoWebBrowser (url) {\r\n    if (window.NSHub !== undefined) {\r\n      try {\r\n        window.NSHub.naGotoWebBrowser(url)\r\n      } catch (e) {\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * 웹화면 로더 완료시 호출(상품구매옵션)\r\n   * @param {String} dimYn 파라미터\r\n   */\r\n  loadCompleted (dimYn) {\r\n    if (window.NSHub !== undefined) {\r\n      try {\r\n        window.NSHub.naLoadCompleted(dimYn)\r\n      } catch (e) {\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * 딥링크 URL 이동\r\n   * @param {String} url 파라미터\r\n   */\r\n  gotoDeepLinkUrl (url) {\r\n    if (window.NSHub !== undefined) {\r\n      try {\r\n        window.NSHub.naGotoDeepLinkUrl(url)\r\n      } catch (e) {\r\n      }\r\n    }\r\n  }\r\n}\r\nexport default nativeUtil\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('router-view')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=5405b142&\"\nvar script = {}\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","// 라우터 유틸\r\nimport VueRouter from 'vue-router'\r\nimport router from '@/router'\r\nimport nativeUtil from '@frameworks/nativeUtil'\r\nimport {\r\n  isOsApp\r\n} from '@utils/commonutil/commonUtil'\r\n\r\nconst routerUtil = {\r\n  /**\r\n   * history back\r\n   *\r\n   */\r\n  back: () => {\r\n    if (isOsApp()) { // APP\r\n      nativeUtil.goBack()\r\n    } else { // WEB\r\n      router.go(-1)\r\n    }\r\n  },\r\n  /* 라우터 이동 간 발생하는 오류를 global하게 핸들링하기 위해 작성\r\n   * 원본 코드 : https://gist.github.com/bponomarenko/253c64d355373b8e7afccc11581b240a\r\n   *\r\n   * This shim adds support for onAbort global hook (similar to onError by behavior), which allows to\r\n   * register callbacks for aborted navigations globally.\r\n   * At the moment, library doesn't support this api out of the box. This solution is based on workaround\r\n   * proposed in https://github.com/vuejs/vue-router/issues/3157 ticket.\r\n   */\r\n  onRouterAbortShim () {\r\n    const abortCallbacks = []\r\n\r\n    // Registers onAbort callback\r\n    VueRouter.prototype.onAbort = callback => {\r\n      abortCallbacks.push(callback)\r\n    }\r\n\r\n    const processAbortCallbacks = () => {\r\n      abortCallbacks.forEach(callback => {\r\n        callback()\r\n      })\r\n    }\r\n\r\n    // \"router.history\" is undocumented api, but it is the only way to handle aborted navigations as of now\r\n    const historyTransitionTo = router.history.constructor.prototype.transitionTo\r\n\r\n    // This method will be called for both \"router.push\" and \"router.replace\" methods under the hood\r\n    router.history.constructor.prototype.transitionTo = function (location, onComplete, onAbort) {\r\n      return historyTransitionTo.call(this, location, onComplete, async error => {\r\n        processAbortCallbacks()\r\n        if (onAbort) {\r\n          const message = error.message\r\n          if (message.startsWith('Redirected') && message.endsWith('via a navigation guard.')) {\r\n            // (주로) 로그인 필요 페이지를 비 로그인 상태에서 접근 시 로그인 페이지로 이동하며 발생하는 오류 무시\r\n          } else if (message.includes('Avoided redundant navigation to current location')) {\r\n            // 동일 경로로 이동할 때 발생하는 오류 무시\r\n          } else {\r\n            onAbort(error)\r\n          }\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport default routerUtil\r\n","import CONST from '@constants/framework/framework'\r\nimport COMM_CONST from '@constants/framework/constants'\r\nimport cipherUtil from '@frameworks/cipherUtil'\r\nimport localStorageUtil from '@frameworks/localStorageUtil'\r\n\r\nconst storageValidationUtil = {\r\n  PLAIN_TEXT: 'NS홈쇼핑',\r\n  /**\r\n   * storage 갱신 필요 여부 확인\r\n   */\r\n  async checkStorageResetRequired () {\r\n    const storedStorageResetRequired = localStorage.getItem(COMM_CONST.STORAGE_KEY.STORAGE_RESET_REQUIRED)\r\n\r\n    // 검증 값 없을 때\r\n    if (storedStorageResetRequired === null) {\r\n      this.resetStorage()\r\n\r\n      return\r\n    }\r\n\r\n    // storage 갱신 필요 여부 확인\r\n    const isCipherOnStorage = CONST.IS_CIPHER_ON_STORAGE\r\n    const PLAIN_TEXT = this.PLAIN_TEXT\r\n\r\n    if (isCipherOnStorage) { // 암호 사용\r\n      if (PLAIN_TEXT === storedStorageResetRequired) { // 암호화 적용되지 않은 경우\r\n        this.resetStorage()\r\n      }\r\n\r\n      const decryptedText = cipherUtil.decryptLightly(storedStorageResetRequired)\r\n      if (decryptedText !== PLAIN_TEXT) { // 복호화 값이 다른 경우\r\n        this.resetStorage()\r\n      }\r\n    } else { // 암호 미사용\r\n      if (PLAIN_TEXT !== storedStorageResetRequired) { // 암호화 적용된 경우\r\n        this.resetStorage()\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * storage 초기화\r\n   */\r\n  resetStorage () {\r\n    const PLAIN_TEXT = this.PLAIN_TEXT\r\n\r\n    localStorage.clear()\r\n    sessionStorage.clear()\r\n    localStorageUtil.set(COMM_CONST.STORAGE_KEY.STORAGE_RESET_REQUIRED, PLAIN_TEXT)\r\n  }\r\n}\r\n\r\nexport default storageValidationUtil\r\n","import Vue from 'vue'\r\nimport App from '@/App'\r\nimport router from '@/router'\r\nimport 'intersection-observer'\r\nimport VueAwesomeSwiper from 'vue-awesome-swiper'\r\nimport 'swiper/dist/css/swiper.css'\r\nimport Vue2TouchEvents from 'vue2-touch-events'\r\nimport VueMeta from 'vue-meta'\r\nimport '@splidejs/splide/dist/css/themes/splide-default.min.css'\r\nimport 'video.js/dist/video-js.min.css'\r\nimport '@videojs/http-streaming/dist/videojs-http-streaming.min'\r\nimport VueVideoPlayer from 'vue-video-player'\r\nimport nsaxios from '@frameworks/axiosUtil'\r\n\r\nimport CONST from '@constants/framework/framework'\r\nimport COMM_CONST from '@constants/framework/constants'\r\nimport errorUtil from '@frameworks/errorUtil'\r\nimport localStorageUtil from '@frameworks/localStorageUtil'\r\nimport nslog from '@frameworks/logUtil'\r\nimport routerUtil from '@frameworks/routerUtil'\r\nimport checkUpdateUtil from '@utils/checkUpdateUtil'\r\nimport {\r\n  getUUID\r\n} from '@utils/commonutil/commonUtil'\r\nimport storageValidationUtil from '@utils/storageValidationUtil'\r\n\r\nVue.use(VueAwesomeSwiper)\r\nVue.use(Vue2TouchEvents, {\r\n  disableClick: true, // 터치 해제 이후에도 버튼 강조 해제 안되는 버그 수정\r\n  touchClass: 'pressed' // 공통 터치 클래스\r\n})\r\nVue.use(VueMeta)\r\nVue.use(VueVideoPlayer)\r\n\r\nVue.config.productionTip = false\r\n\r\n/**\r\n * custom error hanlder\r\n * @param {Object} err 에러 객체\r\n * @param {Object} vm view model\r\n * @param {Object} info\r\n */\r\nVue.config.errorHandler = function (err, vm, info) {\r\n  // 업데이트 확인\r\n  if (!CONST.IS_LOCAL_MODE && !CONST.IS_TEST_REPORT) {\r\n    checkUpdateUtil.check(CONST.UPDATE.CHECK_TYPE.NONE)\r\n  }\r\n  nslog.sendRecord(CONST.LOG.TYPE.ERROR, {\r\n    type: info,\r\n    message: err.message,\r\n    trace: err.stack,\r\n    status: '500',\r\n    page: errorUtil.getCurrentURL(),\r\n    view: errorUtil.getComponentName(vm)\r\n  })\r\n  if (CONST.IS_DEV_LOG) {\r\n    console.error(err)\r\n    console.info(vm)\r\n    console.info(info)\r\n  }\r\n}\r\n\r\n// nsaxios global 설정\r\nVue.prototype.$nsaxios = nsaxios\r\n\r\n/**\r\n * 설정 초기화\r\n */\r\nconst init = async () => {\r\n  // storage 초기화 필요 여부 확인\r\n  await storageValidationUtil.checkStorageResetRequired()\r\n\r\n  // LocalStorage에 UUID 가 없으면 생성 후 저장\r\n  if (!localStorageUtil.get(COMM_CONST.STORAGE_KEY.UUID)) {\r\n    localStorageUtil.set(COMM_CONST.STORAGE_KEY.UUID, getUUID())\r\n  }\r\n\r\n  // 업데이트 확인 인자값(index.html의 LastModified값) 최초 LocalStorage 저장\r\n  checkUpdateUtil.saveLatest()\r\n\r\n  // 라우터 이동 간 발생하는 오류를 global하게 핸들링\r\n  routerUtil.onRouterAbortShim()\r\n\r\n  new Vue({\r\n    router,\r\n    render: h => h(App)\r\n  }).$mount('#app')\r\n}\r\n\r\ninit()\r\n","/**\r\n * 문자를 입력받아 문자의 앞을 0으로 채운다\r\n *\r\n * @param {String or Number} str (필수) 0을 채울 문자\r\n * @param {Number} len (필수) 0을 채우고 난 후의 문자의 길이\r\n * @returns {string} 0으로 채워진 문자열\r\n */\r\nfunction zf (str, len) {\r\n  str += ''\r\n\r\n  if (len > str.length) {\r\n    return '0'.repeat(len - str.length) + str\r\n  } else {\r\n    return str\r\n  }\r\n}\r\n\r\nexport default zf\r\n","import zf from '@frameworks/dateutil/zf'\r\n\r\n/**\r\n * 날짜 포맷\r\n * @param {date | string(yyyyMMdd or yyyyMMddHHmmss)} date (필수) 변환할 대상 날짜\r\n * @param {string} format (필수) 날짜 변환 포맷 ex) yyyy-MM-dd hh:mm:ss\r\n * @returns {string} 포맷팅된 날짜 형식\r\n */\r\nfunction format (date, format) {\r\n  let d = null\r\n  if (typeof date === 'object' && date instanceof Date) {\r\n    d = date\r\n  } else if (typeof date === 'string' && date.length >= 8) {\r\n    let dateString = ''\r\n    const year = date.substr(0, 4)\r\n    const month = date.substr(4, 2)\r\n    const day = date.substr(6, 2)\r\n    dateString = `${year}-${month}-${day}`\r\n    if (date.length === 14) {\r\n      const hour = date.substr(8, 2)\r\n      const minute = date.substr(10, 2)\r\n      const second = date.substr(12, 2)\r\n      dateString += `T${hour}:${minute}:${second}`\r\n    }\r\n    d = new Date(dateString)\r\n  } else {\r\n    return null\r\n  }\r\n\r\n  return format.replace(/(yyyy|yy|MM|dd|E|hh|mm|ss|a\\/p)/gi, $1 => {\r\n    switch ($1) {\r\n      case 'yyyy': return d.getFullYear()\r\n      case 'yy': return zf(d.getFullYear() % 1000, 2)\r\n      case 'MM': return zf(d.getMonth() + 1, 2)\r\n      case 'dd': return zf(d.getDate(), 2)\r\n      case 'E': return ['일', '월', '화', '수', '목', '금', '토'][d.getDay()]\r\n      case 'HH': return zf(d.getHours(), 2)\r\n      case 'hh': {\r\n        const h = d.getHours()\r\n        return zf(h % 12 ? h : 12, 2)\r\n      }\r\n      case 'mm': return zf(d.getMinutes(), 2)\r\n      case 'ss': return zf(d.getSeconds(), 2)\r\n      case 'a/p': return d.getHours() < 12 ? '오전' : '오후'\r\n      default: return $1\r\n    }\r\n  })\r\n}\r\n\r\nexport default format\r\n","// framework 상수 정의\r\nconst CONST = {\r\n  API_HOST: process.env.VUE_APP_API_HOST,\r\n  API_URL: `${process.env.VUE_APP_API_HOST}/webapp/wcs/stores/servlet`,\r\n  MOBILE_HOST: process.env.VUE_APP_MOBILE_HOST,\r\n  PC_HOST: process.env.VUE_APP_PC_HOST,\r\n  NSMALL_API_HOST: process.env.VUE_APP_NSMALL_API_HOST,\r\n  NSMALL_API_COMMON_PATH: process.env.VUE_APP_NSMALL_API_COMMON_PATH,\r\n  NSMALL_API_URL: process.env.VUE_APP_NSMALL_API_HOST + process.env.VUE_APP_NSMALL_API_COMMON_PATH,\r\n  NSMALL_API_MARKETING_PUSH_PATH: '/marketing-push',\r\n  NSMALL_API_MARKETING_PUSH_VERSION: '/v1',\r\n  CIPHER_ENC_KEY: process.env.VUE_APP_CIPHER_ENC_KEY,\r\n  CIPHER_SALT: process.env.VUE_APP_CIPHER_SALT,\r\n  CIPHER_IV: process.env.VUE_APP_CIPHER_IV,\r\n  DELIVERY_SECRET_TOKEN: process.env.VUE_APP_DELIVERY_SECRET_TOKEN,\r\n  LOG: {\r\n    STREAM: {\r\n      URL: {\r\n        // BASE: 'https://7uz9s9v44m.execute-api.ap-northeast-2.amazonaws.com/dev/streams/nsm-dev-mobile-web-log',\r\n        BASE: process.env.VUE_APP_LOG_HOST,\r\n        SINGLE: '/record'\r\n      }\r\n    },\r\n    TYPE: {\r\n      ERROR: 'ERROR',\r\n      RESPONSE: 'RESPONSE'\r\n    },\r\n    MESSAGE: {\r\n      VALID: {\r\n        TYPE_NOT_VALID: 'LogUtil validate: Type is not valid',\r\n        ARGS_LENGTH_ZERO: 'LogUtil validate: Arguments length is zero'\r\n      },\r\n      REQUEST: {\r\n        ERROR: 'Axios interceptors: RequestError',\r\n        NOT_READY: 'LogUtil sendRecord: Send data is not ready',\r\n        LOCAL_MODE: '[NSLog] The current mode is local. it does not send logs.'\r\n      },\r\n      RESPONSE: {\r\n        ERROR: 'Axios interceptors: ResponseError'\r\n      }\r\n    }\r\n  },\r\n  IS_SERVER_STATE: process.env.VUE_APP_IS_SERVER_STATE,\r\n  IS_DEV_MODE: process.env.VUE_APP_IS_DEV_MODE === 'true', // (운영상태 : false, 개발상태 : true)\r\n  IS_DEV_LOG: process.env.VUE_APP_IS_DEV_LOG === 'true', // (로그를 출력 : true, 출력하지 않음 : false)\r\n  IS_ALLOW_LOG: process.env.VUE_APP_IS_ALLOW_LOG === 'true', // Kinesis Log 적재 여부 (로그를 적재 : true, 로그를 미적재 : false)\r\n  IS_TEST_REPORT: process.env.VUE_APP_IS_TEST_REPORT === 'true', // vue.config.js 빌드 파일에서 동적으로 변경. 추후 test 용도로 사용\r\n  IS_ALLOW_SUCCESS_LOG: process.env.VUE_APP_IS_ALLOW_SUCCESS_LOG === 'true', // WCS API 성공로그 적재 여부\r\n  IS_LOCAL_MODE: process.env.VUE_APP_IS_LOCAL_MODE === 'true', // vue.config.js 빌드 파일에서 동적으로 변경.\r\n  MOBILE_NSMALL_PATH: process.env.VUE_APP_MOBILE_NSMALL_PATH,\r\n  NS_IMAGE_CUST_SRV: '//image.nsmall.com/ec_custimages/',\r\n  NS_IMAGE_EXHI_SRV: '//image.nsmall.com/ec_comimages/nsupload/xplat/',\r\n  NS_IMAGE: process.env.VUE_APP_NS_IMAGE,\r\n  NS_IMAGE_PRODUCT: `${process.env.VUE_APP_NS_IMAGE}/itemimg`,\r\n  NS_IMAGE_CATE: '//image.nsmall.com/ec_comimages/nsupload/espot/images/mobile/icons/cate/',\r\n  LIVE: {\r\n    url: {\r\n      etc: 'https://livestream.nsmall.com:443/IPHONE/nsmallMobile.m3u8',\r\n      ios: 'https://livestream.nsmall.com:443/IPHONE/nsmallMobile.m3u8',\r\n      android: 'https://livestream.nsmall.com:443/IPHONE/nsmallMobile.m3u8',\r\n      shopPlus: 'https://shoppstream.nsmall.com:443/IPHONE/mobile.m3u8',\r\n      thinglive: 'https://shopplaylive.nsmall.com:443/IPHONE/live.m3u8'\r\n    }\r\n  },\r\n  NSTALK_TVLIVE_PATH: process.env.VUE_APP_NSTALK_TVLIVE_PATH,\r\n  NSTALK_THINGLIVE_PATH: process.env.VUE_APP_NSTALK_THINGLIVE_PATH,\r\n  UPDATE: {\r\n    CHECK_TYPE: {\r\n      NONE: 'NONE',\r\n      TIME: 'TIME',\r\n      COUNT: 'COUNT'\r\n    },\r\n    KEY: {\r\n      SEPARATOR: 'last-modified',\r\n      COUNT: 'update-check-request-count',\r\n      TIME: 'update-check-request-time'\r\n    },\r\n    MAXIMUM_COUNT: 5,\r\n    MAXIMUM_WAIT_TIME: 5\r\n  },\r\n  IS_CIPHER_ON_STORAGE: process.env.VUE_APP_IS_CIPHER_ON_STORAGE === 'true',\r\n  API_ERROR_MESSAGES: [\r\n    '사용할 수 없는 문자 오류'\r\n  ],\r\n  CATEGORY_ID_EMPLOYEE: process.env.VUE_APP_CATEGORY_ID_EMPLOYEE,\r\n  CATEGORY_ID_HARIM: process.env.VUE_APP_CATEGORY_ID_HARIM\r\n}\r\n\r\nconst APP_CONFIG = {\r\n  LOCAL: 'LOCAL',\r\n  DEV: 'DEV',\r\n  TEST: 'TEST',\r\n  PROD: 'PROD',\r\n  ACTIVE_PROFILE: CONST.IS_SERVER_STATE,\r\n  getActiveProfile () {\r\n    return APP_CONFIG.ACTIVE_PROFILE\r\n  },\r\n  isActiveProfile (state) {\r\n    return APP_CONFIG.ACTIVE_PROFILE === state\r\n  },\r\n  isLocal () {\r\n    return APP_CONFIG.ACTIVE_PROFILE === APP_CONFIG.LOCAL\r\n  },\r\n  isDev () {\r\n    return APP_CONFIG.ACTIVE_PROFILE === APP_CONFIG.DEV\r\n  },\r\n  isTest () {\r\n    return APP_CONFIG.ACTIVE_PROFILE === APP_CONFIG.TEST\r\n  },\r\n  isProd () {\r\n    return APP_CONFIG.ACTIVE_PROFILE === APP_CONFIG.PROD\r\n  }\r\n}\r\n\r\nexport { CONST as default, APP_CONFIG }\r\n","/**\r\n * UUID v4 generator in JavaScript (RFC4122 compliant)\r\n *\r\n * @returns {String}\r\n */\r\nfunction getUUID () {\r\n  return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>\r\n    (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\r\n  )\r\n}\r\n\r\nexport default getUUID\r\n","/**\r\n * 앱인지 판단\r\n *\r\n * @returns {Boolean} true : App, false : Web\r\n */\r\nfunction isOsApp () {\r\n  return Boolean(window.NSHub)\r\n}\r\n\r\nexport default isOsApp\r\n","import CryptoJS from 'crypto-js'\r\nimport {\r\n  isJsonString\r\n} from '@utils/commonutil/commonUtil'\r\nimport CONST from '@constants/framework/framework'\r\n\r\nconst cipherUtil = {\r\n  /**\r\n   * 평문 암호화 (AES 128 암호화)\r\n   * @param {(String|Array|Object)} value 암호화 대상 값\r\n   * @returns {String} 암호화 문자열\r\n   */\r\n  encryptValue (value) {\r\n    const secretKey = this.getSecretKey()\r\n    const cipherOptions = this.getCipherOption()\r\n\r\n    let targetValue\r\n    if (typeof value === 'string') {\r\n      targetValue = value\r\n    } else {\r\n      targetValue = JSON.stringify(value)\r\n    }\r\n\r\n    const ciphertext = CryptoJS.AES.encrypt(targetValue, secretKey, cipherOptions).toString()\r\n\r\n    return ciphertext\r\n  },\r\n  /**\r\n   * 암호문 복호화 (AES 128 복호화)\r\n   * @param {String} ciphertext\r\n   * @returns {*} 복호화 값\r\n   */\r\n  decryptValue (ciphertext) {\r\n    const secretKey = this.getSecretKey()\r\n    const cipherOptions = this.getCipherOption()\r\n\r\n    const bytes = CryptoJS.AES.decrypt(ciphertext, secretKey, cipherOptions)\r\n    const decryptedValue = bytes.toString(CryptoJS.enc.Utf8)\r\n\r\n    let originalValue\r\n    if (isJsonString(decryptedValue)) {\r\n      originalValue = JSON.parse(decryptedValue)\r\n    } else {\r\n      originalValue = decryptedValue\r\n    }\r\n\r\n    return originalValue\r\n  },\r\n  /**\r\n   * 암복호화 비밀키 객체 반환\r\n   * @returns {Object}\r\n   */\r\n  getSecretKey () {\r\n    const { passPhrase, salt } = this.getCipherObject()\r\n    const keySize = 128\r\n    const iterationCount = 1000\r\n\r\n    if (CONST.IS_TEST_REPORT) { // unit test timeout 방지\r\n      return passPhrase\r\n    }\r\n\r\n    const options = {\r\n      keySize: keySize / 32,\r\n      iterations: iterationCount\r\n    }\r\n\r\n    const secretKey = CryptoJS.PBKDF2(passPhrase, CryptoJS.enc.Hex.parse(salt), options)\r\n\r\n    return secretKey\r\n  },\r\n  /**\r\n   * 암복호화용 객체 반환\r\n   * @returns {Object}\r\n   */\r\n  getCipherObject () {\r\n    return {\r\n      passPhrase: CONST.CIPHER_ENC_KEY,\r\n      iv: CONST.CIPHER_IV,\r\n      salt: CONST.CIPHER_SALT\r\n    }\r\n  },\r\n  /**\r\n   * 암복호화 옵션 객체 반환\r\n   * @returns {Object}\r\n   */\r\n  getCipherOption () {\r\n    const { iv } = this.getCipherObject()\r\n\r\n    if (CONST.IS_TEST_REPORT) { // unit test timeout 방지\r\n      return {}\r\n    }\r\n\r\n    const cipherOptions = { iv: CryptoJS.enc.Hex.parse(iv) }\r\n\r\n    return cipherOptions\r\n  },\r\n  /**\r\n   * 경량 암호화\r\n   * @param {(String|Array|Object)} value 암호화 대상 값\r\n   * @returns {String} 암호화 문자열\r\n   */\r\n  encryptLightly (value) {\r\n    const { passPhrase } = this.getCipherObject()\r\n\r\n    let targetValue\r\n    if (typeof value === 'string') {\r\n      targetValue = value\r\n    } else {\r\n      targetValue = JSON.stringify(value)\r\n    }\r\n\r\n    const ciphertext = CryptoJS.Rabbit.encrypt(targetValue, passPhrase).toString()\r\n\r\n    return ciphertext\r\n  },\r\n  /**\r\n   * 경량 복호화\r\n   * @param {String} ciphertext\r\n   * @returns {*} 복호화 값\r\n   */\r\n  decryptLightly (ciphertext) {\r\n    const { passPhrase } = this.getCipherObject()\r\n\r\n    const bytes = CryptoJS.Rabbit.decrypt(ciphertext, passPhrase)\r\n    const decryptedValue = bytes.toString(CryptoJS.enc.Utf8)\r\n\r\n    let originalValue\r\n    if (isJsonString(decryptedValue)) {\r\n      originalValue = JSON.parse(decryptedValue)\r\n    } else {\r\n      originalValue = decryptedValue\r\n    }\r\n\r\n    return originalValue\r\n  }\r\n}\r\n\r\nexport default cipherUtil\r\n","\r\n// TODO : native에서 사용하는 상수\r\nconst APP_MOBILE_HOST = process.env.VUE_APP_MOBILE_HOST\r\nconst NATIVE_CONST = {\r\n  NATIVE_URL: {\r\n    LOGIN: `${APP_MOBILE_HOST}/customer/login/regular-member`,\r\n    MYPAGE_SETTING: `${APP_MOBILE_HOST}/customer/setting`,\r\n    ORDER_SHEET: `${APP_MOBILE_HOST}/order/sheet`,\r\n    ORDER_CONSULT: `${APP_MOBILE_HOST}/order/consult`,\r\n    ORDER_NSPAY_CERT: `${APP_MOBILE_HOST}/native/order-nspay-cert`,\r\n    CART_LIST: `${APP_MOBILE_HOST}/order/cart`,\r\n    SEARCH: `${APP_MOBILE_HOST}/native/search`\r\n  },\r\n  STORAGE_KEY: {\r\n    LOGIN_REDIRECT_NAME: 'loginRedirectName', // 쿠키저장할 로그인 후 이동할 URL정보(router name)\r\n    LOGIN_REDIRECT_PATH: 'loginRedirectPath', // 쿠키저장할 로그인 후 이동할 URL정보(router path)\r\n    LOGIN_TYPE: 'loginType', // 로그인 타입\r\n    AUTO_LOGIN_YN: 'autoLoginYn', // 쿠키저장할 자동로그인 여부\r\n    AUTO_LOGIN_ID: 'autoLoginId', // 쿠키저장할 자동로그인 ID\r\n    AUTO_LOGIN_PW: 'autoLoginPw', // 쿠키저장할 자동로그인 PW\r\n    AUTO_ENT_FLAG: 'autoEntFlag', // 쿠키저장할 자동로그인 entFlag(NAVER, FACEBOOK, FAYCO, KAKAO)\r\n    VIEW_PRODUCT_NUMBER: 'viewProductNumber', // 쿠키저장할 최근본 상품 넘버\r\n    ORDER_PARAMS: 'orderParams', // 주문/결제 화면으로 넘길 쿠키저장할 파라미터\r\n    PRODUCT_DETAIL_PATH: 'productDetailPath', // 성인인증 후 상세로 갈 url\r\n    GOING_INVOKE: 'goingInvoke', // 회원가입 완료페이지에 넘길 쿠키저장할 파라미터\r\n    PUSH_UUID: 'pushUUID',\r\n    PUSH_YN: 'pushYn' // PUSH UUID // PUSH UUID\r\n  },\r\n  CONSTANTS: {\r\n    VIEW_HISTORY: 'viewhistory',\r\n    CART_LIST: 'cartList',\r\n    MYPAGE: 'mypage',\r\n    PRODUCT_DETAIL: 'productDetail',\r\n    SETTING: 'setting'\r\n  }\r\n}\r\n\r\nexport default NATIVE_CONST\r\n","// 쿠키 유틸\r\nconst cookieUtil = {\r\n  /**\r\n   * 쿠키 가져오기\r\n   *\r\n   * @param {string} name (필수) 쿠키 이름\r\n   * @returns {string} 쿠키 이름에 대한 값을 반환. 없는 경우에는 \"\"를 반환.\r\n   */\r\n  getCookie: name => {\r\n    const arg = `${name}=`\r\n    const alen = arg.length\r\n    const clen = document.cookie.length\r\n    let i = 0\r\n    while (i < clen) {\r\n      const j = i + alen\r\n      if (document.cookie.substring(i, j) === arg) {\r\n        return cookieUtil.getCookieVal(j)\r\n      }\r\n      i = document.cookie.indexOf(' ', i) + 1\r\n      if (i === 0) {\r\n        break\r\n      }\r\n    }\r\n    return ''\r\n  },\r\n  /**\r\n   * 쿠키 저장\r\n   *\r\n   * @param {string} name (필수) 쿠키 이름\r\n   * @param {string} value (필수) 쿠키 값\r\n   * @param {string} [expires] (선택) 쿠키의 유효 일\r\n   * @param {string} [path='/'] (선택) path\r\n   * @param {string} [domain=''] (선택) 도메인\r\n   * @param {string} [secure=''] (선택) 보안옵션\r\n   */\r\n  setCookie: (name, value, expires, path = '/', domain = '', secure = '') => {\r\n    document.cookie = `${name}=${escape(value)\r\n                        }${(expires) ? `; expires=${expires}` : ''\r\n                        }${(path) ? `; path=${path}` : ''\r\n                        }${(domain) ? `; domain=${domain}` : ''\r\n                        }${(secure) ? '; secure' : ''}`\r\n  },\r\n  /**\r\n   * 쿠키 삭제\r\n   *\r\n   * @param {String} name (필수) 삭제할 쿠키 이름\r\n   * @param {string} [path='/'] (선택) path\r\n   * @param {string} [domain=''] (선택) 도메인\r\n   */\r\n  deleteCookie: (name, path = '/', domain = '') => {\r\n    if (cookieUtil.getCookie(name)) {\r\n      const pathStr = path ? `; path=${path}` : ''\r\n      const domainStr = domain ? `; domain=${domain}` : ''\r\n      document.cookie = `${name}=${pathStr}${domainStr}; expires=Thu, 01-Jan-70 00:00:01 GMT`\r\n    }\r\n  },\r\n  /**\r\n   * 쿠키를 저장할 때 필요한 적합한 형식의 유효기간을 반환\r\n   *\r\n   * @param {number} days (필수) 쿠키가 유효할 일 (예를 들어 3 일 동안 유효해야 하면 3을 입력)\r\n   * @param {number} hours (필수) 쿠키가 유효할 시간 (예를 들어 2 시간 동안 유효해야 하면 2를 입력)\r\n   * @param {number} minutes (필수) 쿠키가 유효할 분 (예를 들어 30 분 동안 유효해야 하면 30을 입력)\r\n   * @returns {string} 쿠키 유효기간\r\n   */\r\n  getExpDate: (days, hours, minutes) => {\r\n    const expDate = new Date()\r\n    if (typeof days === 'number' && typeof hours === 'number' && typeof minutes === 'number') {\r\n      expDate.setDate(expDate.getDate() + Number(days))\r\n      expDate.setHours(expDate.getHours() + Number(hours))\r\n      expDate.setMinutes(expDate.getMinutes() + Number(minutes))\r\n    }\r\n    return expDate.toGMTString()\r\n  },\r\n  /**\r\n   * 쿠키 값을 읽을 때 사용하는 보조 함수\r\n   *\r\n   * @param {object} offset\r\n   * @returns\r\n   */\r\n  getCookieVal: offset => {\r\n    let endstr = document.cookie.indexOf(';', offset)\r\n    if (endstr === -1) {\r\n      endstr = document.cookie.length\r\n    }\r\n    return unescape(document.cookie.substring(offset, endstr))\r\n  }\r\n}\r\n\r\nexport default cookieUtil\r\n","import COMM_CONST from '@constants/framework/constants'\r\nimport nsaxios from '@frameworks/axiosUtil'\r\nimport localStorageUtil from '@frameworks/localStorageUtil'\r\nimport sessionStorageUtil from '@frameworks/sessionStorageUtil'\r\nimport cipherUtil from '@frameworks/cipherUtil'\r\nimport bizUtil from '@utils/bizUtil'\r\nimport {\r\n  isNull,\r\n  isOsApp,\r\n  viewType\r\n} from '@utils/commonutil/commonUtil'\r\nimport router from '@/router'\r\nimport nativeUtil from '@/common/frameworks/nativeUtil'\r\nimport NATIVE_CONST from '@constants/framework/native'\r\n\r\n/**\r\n * 사용자 인증 모듈 (로그인 여부, 사용자정보, etc...)\r\n */\r\nconst loginUtil = {\r\n  memberInfo: null,\r\n  /**\r\n   * 고객 NS Mall ID\r\n   * @returns {string}\r\n   */\r\n  userId: () => loginUtil.getUserInfo('userId'),\r\n  /**\r\n   * 로그인형태\r\n   * @returns {String}\r\n   */\r\n  logonType: () => loginUtil.getUserInfo('logonType'),\r\n  /**\r\n   * 고객명\r\n   * @returns {String}\r\n   */\r\n  userName: () => loginUtil.getUserInfo('userName'),\r\n  /**\r\n   * 고객번호\r\n   * @returns {String}\r\n   */\r\n  custNum: () => loginUtil.getUserInfo('custNum'),\r\n  /**\r\n   * 고객 NS Mall Login ID\r\n   * @returns {String}\r\n   */\r\n  logonId: () => loginUtil.getUserInfo('logonId'),\r\n  /**\r\n   * 고객 E-Mail\r\n   * @returns {String}\r\n   */\r\n  email: () => loginUtil.getUserInfo('email'),\r\n  /**\r\n   * 고객 휴대폰번호\r\n   * @returns {String}\r\n   */\r\n  hpNo: () => loginUtil.getUserInfo('hpNo'),\r\n  /**\r\n   * 고객 생년월일\r\n   * @returns {String}\r\n   */\r\n  birthday: () => loginUtil.getUserInfo('birthday'),\r\n  /**\r\n   * 고객 인증여부\r\n   * @returns {String}\r\n   */\r\n  isAdult: () => loginUtil.getUserInfo('isAdult') || 'N',\r\n  /**\r\n   * 고객 성인여부\r\n   * @returns {String}\r\n   */\r\n  adultAuthYN: () => loginUtil.getUserInfo('adultAuthYN'),\r\n  /**\r\n   * 고객 tcode\r\n   * @returns {String}\r\n   */\r\n  tcode: () => loginUtil.getUserInfo('tcode'),\r\n  /**\r\n   * 고객 연락처\r\n   * @returns {String}\r\n   */\r\n  telNo: () => loginUtil.getUserInfo('telNo'),\r\n  /**\r\n   * 고객 VIP여부\r\n   * @returns {String}\r\n   */\r\n  isVip: () => loginUtil.getUserInfo('isVip') === '' ? 'N' : 'Y',\r\n  /**\r\n   * 고객 세션ID\r\n   * @returns {String}\r\n   */\r\n  sessionId: () => loginUtil.getUserInfo('sessionId'),\r\n  /**\r\n   * 간편로그인사용자 대표로그인사이트 Flag\r\n   * @returns {String}\r\n   */\r\n  entFlag: () => loginUtil.getUserInfo('entFlag'),\r\n  /**\r\n   * 로그인 여부 체크\r\n   * @returns {Boolean}\r\n   */\r\n  isLoggedIn () {\r\n    this.synchronizeMemberInfo()\r\n\r\n    if (!isNull(this.memberInfo)) {\r\n      if (!isNull(this.memberInfo.loginyn) && this.memberInfo.loginyn === 'Y') {\r\n        return true\r\n      }\r\n    }\r\n\r\n    return false\r\n  },\r\n  /**\r\n   * 로그인 처리\r\n   * @param {Object} memberInfo 고객 로그인 정보\r\n   */\r\n  login (memberInfo) {\r\n    const isAutoLoginCheck = memberInfo.isAutoLoginCheck === true\r\n    if (memberInfo.isAutoLoginCheck) { // 자동 로그인 사용\r\n      localStorageUtil.set('memberInfo', memberInfo)\r\n    }\r\n    localStorage.setItem('isAutoLoginCheck', isAutoLoginCheck)\r\n    sessionStorageUtil.set('memberInfo', memberInfo)\r\n    this.memberInfo = memberInfo\r\n\r\n    if (isOsApp()) { // APP\r\n      localStorageUtil.set('memberInfo', memberInfo)\r\n      const autoLoginYn = localStorageUtil.get(NATIVE_CONST.STORAGE_KEY.AUTO_LOGIN_YN)\r\n      // Native에 멤버정보전달\r\n      let nativeCustNum = ''\r\n      let nativeAdultAuthYN = 'N'\r\n      if (!isNull(memberInfo.nativeCustNum)) {\r\n        nativeCustNum = memberInfo.nativeCustNum\r\n      } else if (!isNull(memberInfo.custNum)) {\r\n        nativeCustNum = memberInfo.custNum\r\n      }\r\n      if (!isNull(memberInfo.nativeAdultAuthYN)) {\r\n        nativeAdultAuthYN = memberInfo.nativeAdultAuthYN\r\n      } else if (!isNull(memberInfo.adultAuthYN)) {\r\n        nativeAdultAuthYN = memberInfo.adultAuthYN\r\n      }\r\n      const userInfo = {\r\n        logonId: memberInfo.logonId,\r\n        userId: memberInfo.userId,\r\n        userName: memberInfo.userName,\r\n        entFlag: isNull(memberInfo.entFlag) ? '' : memberInfo.entFlag,\r\n        entEmail: memberInfo.entEmail,\r\n        entUserId: isNull(memberInfo.entUserId) ? '' : memberInfo.entUserId,\r\n        birthday: memberInfo.birthday,\r\n        gender: memberInfo.gender,\r\n        isAutoLoginCheck: autoLoginYn === 'Y',\r\n        registration: memberInfo.registration,\r\n        staffInfo: memberInfo.staffInfo,\r\n        staffBnft: memberInfo.staffBnft,\r\n        lastOrder: memberInfo.lastOrder,\r\n        loginyn: memberInfo.loginyn,\r\n        userMargetingEmail: memberInfo.userMargetingEmail,\r\n        userMargetingTM: memberInfo.userMargetingTM,\r\n        userMarketingSMS: memberInfo.userMarketingSMS,\r\n        gradeNm: memberInfo.gradeNm,\r\n        custNum: nativeCustNum,\r\n        adultAuthYN: nativeAdultAuthYN\r\n      }\r\n      nativeUtil.setLoginMemberInfo(JSON.stringify(userInfo))\r\n\r\n      // 자동 로그인 이면 ID, PW 쿠키 저장\r\n      if (autoLoginYn === 'Y') {\r\n        localStorageUtil.set(NATIVE_CONST.STORAGE_KEY.AUTO_LOGIN_ID, cipherUtil.encryptValue(memberInfo.logonId))\r\n        localStorageUtil.set(NATIVE_CONST.STORAGE_KEY.AUTO_LOGIN_PW, cipherUtil.encryptValue(memberInfo.logonPassword))\r\n        localStorageUtil.set(NATIVE_CONST.STORAGE_KEY.AUTO_ENT_FLAG, memberInfo.entFlag)\r\n      }\r\n\r\n      // 구글 스마트락에 사용자 정보 저장\r\n      if (viewType() === 'android' && isNull(memberInfo.isCredential) && memberInfo.logonPassword !== 'N' && isNull(memberInfo.entFlag) && memberInfo.logonType === COMM_CONST.LOGON_TYPE.NORMAL) {\r\n        if (isNull(memberInfo.fromLoginPage)) {\r\n          nativeUtil.saveCredential(memberInfo.logonId, memberInfo.logonPassword)\r\n        } else {\r\n          nativeUtil.saveCredentialExcep(memberInfo.logonId, memberInfo.logonPassword)\r\n        }\r\n      } else if (viewType() === 'android' && isNull(memberInfo.isCredential) && !isNull(memberInfo.entFlag)) {\r\n        nativeUtil.saveCredential(memberInfo.logonId, memberInfo.logonPassword)\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * 로그아웃 처리\r\n   * @param {Object} targetUrl 이동할 url정보\r\n   * @returns {Promise}\r\n   */\r\n  logout (targetUrl) {\r\n    return nsaxios.post('NSLogoutMoblieCmdReal', {\r\n      userId: this.getUserInfo('userId'),\r\n      sessionId: this.getUserInfo('sessionid')\r\n    }).then(() => {\r\n      sessionStorageUtil.del('memberInfo')\r\n      localStorageUtil.del('memberInfo')\r\n      localStorage.removeItem('isAutoLoginCheck')\r\n      this.memberInfo = null\r\n\r\n      // 로그아웃 후 새로운 세션을 받아오기 위한 처리. 이 처리를 하지 않으면 다수의 새로운 세션이 동시에 생성되어 문제를 발생시킴\r\n      return nsaxios.post('Dummy', {}).then(() => {\r\n        if (!isNull(targetUrl)) {\r\n          router.push(targetUrl)\r\n          bizUtil.getCartCount()\r\n          if (isOsApp()) { // APP\r\n            nativeUtil.logOut()\r\n          }\r\n        } else {\r\n          if (isOsApp()) { // APP\r\n            nativeUtil.logOut()\r\n            // if (localStorageUtil.get(NATIVE_CONST.STORAGE_KEY.AUTO_LOGIN_YN) !== 'Y') {\r\n            localStorageUtil.del(NATIVE_CONST.STORAGE_KEY.AUTO_LOGIN_ID) // 자동로그인ID 쿠키 삭제\r\n            localStorageUtil.del(NATIVE_CONST.STORAGE_KEY.AUTO_LOGIN_PW) // 자동로그인PW 쿠키 삭제\r\n            localStorageUtil.del(NATIVE_CONST.STORAGE_KEY.AUTO_LOGIN_YN) // 자동로그인여부 쿠키 삭제\r\n            // }\r\n            window.location.reload()\r\n          } else { // WEB\r\n            window.location.reload()\r\n            window.location.href = '/'\r\n          }\r\n        }\r\n      })\r\n    })\r\n  },\r\n  /**\r\n   * 사용자 정보 조회\r\n   * @returns {(Object|null)} 로그인 시 고객정보. 비로그인 시 null\r\n   */\r\n  getMemberInfo () {\r\n    const memberInfo = this.memberInfo\r\n    return memberInfo || null\r\n  },\r\n  /**\r\n   * 사용자 정보 가져오기\r\n   * @param {String} name\r\n   * @returns {String} 사용자 정보\r\n   */\r\n  getUserInfo: name => {\r\n    if (!loginUtil.hasMemberInfo()) {\r\n      return ''\r\n    }\r\n\r\n    loginUtil.synchronizeMemberInfo()\r\n\r\n    const item = loginUtil.memberInfo[name]\r\n\r\n    return item || ''\r\n  },\r\n  /**\r\n   * 사용자 정보 등록\r\n   * @param {String} name\r\n   * @param {String} value\r\n   */\r\n  setUserInfo (name, value) {\r\n    if (isNull(this.memberInfo)) {\r\n      this.memberInfo = {}\r\n    }\r\n\r\n    this.memberInfo[name] = value\r\n    sessionStorageUtil.set('memberInfo', this.memberInfo)\r\n    if (isOsApp()) {\r\n      localStorageUtil.set('memberInfo', this.memberInfo)\r\n    } else {\r\n      if (this.isAutoLoginUsed()) { // 자동 로그인 사용\r\n        localStorageUtil.set('memberInfo', this.memberInfo)\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * 쿠키 정보에 저장된 USER ID를 통해 로그인 여부를 체크한다.\r\n   * @returns {Boolean} 로그인 여부\r\n   */\r\n  checkLogonStatus () {\r\n    this.synchronizeMemberInfo()\r\n\r\n    if (!this.memberInfo) {\r\n      return false\r\n    }\r\n\r\n    // 비회원일 경우도 userId는 존재함. logonID로 판별해야함.\r\n    if (isNull(this.memberInfo.userId) || isNull(this.memberInfo.logonId)) {\r\n      return false\r\n    }\r\n\r\n    return true\r\n  },\r\n  /**\r\n   * 비 회원 여부\r\n   * @returns {Boolean} 비 회원 여부\r\n   */\r\n  isNonMember () {\r\n    return this.getUserInfo('logonType') === COMM_CONST.LOGON_TYPE.NONMEMBER\r\n  },\r\n  /**\r\n   * SNS 회원 여부\r\n   * @returns {Boolean} SNS 회원 여부\r\n   */\r\n  isSnsMember () {\r\n    return this.getUserInfo('logonType') === COMM_CONST.LOGON_TYPE.FACEBOOK ||\r\n            this.getUserInfo('logonType') === COMM_CONST.LOGON_TYPE.TWITTER\r\n  },\r\n  /**\r\n   * 고객정보 저장 여부 반환\r\n   * @returns {Boolean}\r\n   */\r\n  hasMemberInfo () {\r\n    let memberInfo = null\r\n    if (isOsApp()) {\r\n      memberInfo = localStorage.getItem('memberInfo')\r\n    } else {\r\n      if (this.isAutoLoginUsed()) { // 자동 로그인 사용\r\n        memberInfo = localStorage.getItem('memberInfo')\r\n      } else { // 자동 로그인 미사용\r\n        memberInfo = sessionStorage.getItem('memberInfo')\r\n      }\r\n    }\r\n\r\n    return memberInfo !== null\r\n  },\r\n  /**\r\n   * 고객정보 동기화 (memory <-> storage)\r\n   */\r\n  synchronizeMemberInfo () {\r\n    if (!this.hasMemberInfo()) {\r\n      return\r\n    }\r\n\r\n    if (!this.memberInfo) { // 새로고침으로인한 메모리 초기화 대응\r\n      if (isOsApp()) {\r\n        this.memberInfo = localStorageUtil.get('memberInfo')\r\n      } else {\r\n        if (this.isAutoLoginUsed()) { // 자동 로그인 사용\r\n          this.memberInfo = localStorageUtil.get('memberInfo')\r\n        } else { // 자동 로그인 미사용\r\n          this.memberInfo = sessionStorageUtil.get('memberInfo')\r\n        }\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * 자동 로그인 기능 사용여부\r\n   * @returns {Boolean}\r\n   */\r\n  isAutoLoginUsed () {\r\n    const isAutoLoginCheck = localStorage.getItem('isAutoLoginCheck')\r\n\r\n    return isAutoLoginCheck === 'true'\r\n  }\r\n}\r\n\r\nexport default loginUtil\r\n","/**\r\n * 입력된 값이 undefined, null, 빈스트링일 경우 true를 리턴\r\n * schangeStr값이 있을 경우(undefined, null이 아닌경우)\r\n * value의 값이 undefined, null, 빈스트링일 경우 changeStr의 값을 리턴한다.\r\n * value의 값이 undefined, null, 빈스트링이 아니면 value의 값을 그대로 리턴한다.\r\n *\r\n * @param {*} value\r\n * @param {*} changeStr\r\n * @returns {(boolean|string)}\r\n */\r\nfunction isNull (value, changeStr) {\r\n  let bReturn = false\r\n\r\n  if (value === undefined || value === null || value === '' || value === 'null' || value === 'undefined') {\r\n    bReturn = true\r\n  }\r\n\r\n  if (undefined !== changeStr && changeStr !== null) {\r\n    if (bReturn) {\r\n      return changeStr\r\n    }\r\n\r\n    return value\r\n  }\r\n\r\n  return bReturn\r\n}\r\n\r\nexport default isNull\r\n","const COMMON_CONST = {\r\n  KAKAO: {\r\n    APP_KEY: {\r\n      JAVASCRIPT: process.env.VUE_APP_KAKAO_APP_KEY_JAVASCRIPT\r\n    }\r\n  },\r\n  // 쇼핑 히스토리 구분\r\n  HISTORY_GUBUN: {\r\n    PRODUCT: 'P', // 상품\r\n    CATEGORY: 'C', // 카테고리\r\n    EXHIBITION: 'F', // 기획전\r\n    EVENT: 'E' // 이벤트\r\n  }\r\n}\r\nexport default COMMON_CONST\r\n","import format from '@frameworks/dateutil/format'\r\n\r\n/**\r\n * 시작일에서 특정 년,월,일이 +,- 된 날짜를 구함\r\n *\r\n * @param {string} startDate (필수) 시작일\r\n * @param {string} year (필수) 계산할 년 수\r\n * @param {string} month (필수) 계산할 월 수\r\n * @param {string} week (필수) 계산할 주 수\r\n * @param {string} day (필수) 계산할 일 수\r\n * @param {String} [dateFormat='yyyy-MM-dd'] (선택) 출력할 날짜 포맷\r\n * @returns {string} 계산된 날짜\r\n *\r\n * calcDate('', 0, 0, 0, 0,'yyyy.MM.dd');  //오늘\r\n * calcDate('', 0, 0,-1, 0,'yyyy.MM.dd');  // Week-1\r\n * calcDate('', 0, 0, 0,-15,'yyyy.MM.dd');   // day-15\r\n * calcDate('', 0,-1, 0, 0,'yyyy.MM.dd');    // month-1\r\n */\r\nfunction calcDate (startDate, year, month, week, day, dateFormat = 'yyyy-MM-dd') {\r\n  let dtReturn\r\n\r\n  if (startDate.length < 1) { // 빈 문자열\r\n    dtReturn = new Date()\r\n  } else if (startDate instanceof Date) { // Date 객체\r\n    dtReturn = new Date(startDate)\r\n  } else { // 문자열 날짜 (safari 및 아이폰 대응용)\r\n    dtReturn = new Date(startDate.replace(/\\s/g, 'T'))\r\n  }\r\n\r\n  if (year !== 0) {\r\n    dtReturn.setYear(dtReturn.getFullYear() + year)\r\n  }\r\n\r\n  if (month !== 0) {\r\n    dtReturn.setMonth(dtReturn.getMonth() + month)\r\n  }\r\n\r\n  if (week !== 0) {\r\n    day += (week * 7)\r\n  }\r\n\r\n  if (day !== 0) {\r\n    dtReturn.setDate(dtReturn.getDate() + day)\r\n  }\r\n\r\n  return format(dtReturn, dateFormat)\r\n}\r\n\r\nexport default calcDate\r\n","/**\r\n * 특정 날짜 Date Type으로 파싱\r\n * iOS의 경우, date.parse 구문은 NaN을 뱉어냄..\r\n * date 값이 null 일 경우에는 split 오류 발생함. null이 아닐 경우에만 처리하도록 수정\r\n * 개발의 21135543 상품 편성표 정보값 중 date가 null인 부분이 존재함.\r\n *\r\n * @param {String} date (필수) 특정 날짜 ex) '2020-12-31 00:00:00'\r\n * @returns {Date} 특정 날짜\r\n */\r\nfunction getDateParse (date) {\r\n  if (date !== null && date !== undefined) {\r\n    const arr = date.split(/[- :]/)\r\n    date = new Date(arr[0], arr[1] - 1, arr[2], arr[3], arr[4], arr[5])\r\n\r\n    return date\r\n  }\r\n}\r\n\r\nexport default getDateParse\r\n","import router from '@/router'\r\n\r\n/**\r\n * espot에서 clickTarget이 Internal로 들어왔을 때, 페이지 이동\r\n *\r\n * @param {String} bannerId 컨텐츠 ID\r\n * @param {String} espotId ESPOT ID\r\n * @param {String} mdUrl 이동할 md URL\r\n */\r\nfunction gotoInternalPage (bannerId, espotId, mdUrl) {\r\n  const invoke = {}\r\n\r\n  try {\r\n    const tmp = mdUrl.split('?')\r\n    if (tmp.length > 1) {\r\n      const paramStr = tmp[1].split('&')\r\n\r\n      invoke.bannerId = bannerId\r\n      invoke.espotId = espotId\r\n\r\n      for (let i = 0; i < paramStr.length; i++) {\r\n        const param = paramStr[i].split('=')\r\n\r\n        invoke[param[0]] = param[1]\r\n      }\r\n    }\r\n\r\n    if (!mdUrl.startsWith('/')) {\r\n      mdUrl = `/${mdUrl}`\r\n    }\r\n\r\n    router.push({\r\n      path: mdUrl,\r\n      params: invoke\r\n    }).catch(() => {\r\n      // router navigation gaurd 에러 메시지 미표시용\r\n    })\r\n  } catch (e) {\r\n  }\r\n}\r\n\r\nexport default gotoInternalPage\r\n","import COMMON_CONST from '@constants/common/common'\r\nimport COMM_CONST from '@constants/framework/constants'\r\nimport {\r\n  calcDate,\r\n  getDateParse\r\n} from '@frameworks/dateutil/dateUtil'\r\nimport nsaxios from '@frameworks/axiosUtil'\r\nimport nativeUtil from '@frameworks/nativeUtil'\r\nimport {\r\n  isOsApp,\r\n  isNull,\r\n  gotoInternalPage\r\n} from '@utils/commonutil/commonUtil'\r\nimport loginUtil from '@utils/loginUtil'\r\nimport router from '@/router'\r\nimport localStorageUtil from '@frameworks/localStorageUtil'\r\n\r\nconst bizUtil = {\r\n  /**\r\n   * 신용카드사 코드의 이름 조회\r\n   *\r\n   * @param {String} cardCode 신용카드사 코드\r\n   * @returns {String} 카드사명\r\n   */\r\n  getCreditCardCodeName: cardCode => {\r\n    if (cardCode !== null && cardCode.length < 3) {\r\n      cardCode = `000${cardCode}`\r\n      cardCode = cardCode.substring(cardCode.length - 3, cardCode.length)\r\n    }\r\n    const paymentCardCode = {\r\n      '029': '신한',\r\n      '027': '현대',\r\n      '031': '삼성',\r\n      '008': '외환',\r\n      '026': '비씨',\r\n      '016': '국민',\r\n      '047': '롯데',\r\n      '045': '(신)롯데',\r\n      '018': 'NH농협',\r\n      '006': '하나SK',\r\n      '022': '씨티',\r\n      '021': '우리',\r\n      '002': '광주',\r\n      '017': '수협',\r\n      '010': '전북',\r\n      '011': '제주',\r\n      '001': '조흥',\r\n      '058': '산업',\r\n      '050 ': '해외 VISA',\r\n      '028': '해외 JCB',\r\n      '048': '동양 다이너스',\r\n      '046': '동양 해외',\r\n      '049': '해외 MASTER',\r\n      '081': '은련'\r\n    }\r\n\r\n    return paymentCardCode[cardCode] || ''\r\n  },\r\n  /**\r\n   * 장바구니 상품 개수 가져온 후 상단 장바구니 아이콘 상품 개수 세팅\r\n   * @returns {Promise}\r\n   */\r\n  getCartCount: () => {\r\n    return nsaxios.post('NSBasketCountCmdReal', {}, data => {\r\n      const count = data?.msg?.common ? data.msg.common.basketCnt : 0 // bjw add: communication failure, defence error.\r\n      bizUtil.setCartCount(count)\r\n    })\r\n  },\r\n  /**\r\n   * 상단 장바구니 아이콘 상품 개수 세팅\r\n   *\r\n   * @param {Number} [count=0] 장바구니 상품 개수\r\n   */\r\n  setCartCount: (count = 0) => {\r\n  },\r\n  /**\r\n   * 카드번호 중간 4자리 *표 표시\r\n   * <pre>\r\n   * \"1234-5678-****-1234\" = formatCardNoWithAsterisk(\"1234567856781234\");\r\n   * \"1234-5678-****-1234\" = formatCardNoWithAsterisk(\"1234-5678-5678-1234\");\r\n   * </pre>\r\n   *\r\n   * @param {string} cardNo 카드번호\r\n   * @returns {string} 별표 처리된 카드번호\r\n   */\r\n  formatCardNoWithAsterisk: cardNo => {\r\n    if (cardNo !== null && cardNo.length === 16) {\r\n      return `${cardNo.substring(0, 4)}-${cardNo.substring(4, 8)}-****-${cardNo.substring(12, 16)}`\r\n    }\r\n    return cardNo\r\n  },\r\n  /**\r\n   * espot 데이터 공통 클릭 이벤트\r\n   *\r\n   * @param {string} target 이동할 타겟 구분(Product, Category, Internal, External)\r\n   * @param {string} contentsId 컨텐츠 ID\r\n   * @param {string} clickCode 이동할 상품코드 또는 카테고리코드\r\n   * @param {string} espotId ESPOT ID\r\n   * @param {string} mdUrl 이동할 md URL\r\n   * @param {string} [catalogId] 카탈로그 ID\r\n   * @param {String} [clksrc] - 전자상거래코드\r\n   */\r\n  espotClickEvent (target, contentsId, clickCode, espotId, mdUrl, catalogId, clksrc) {\r\n    if (isNull(mdUrl)) {\r\n      return false\r\n    }\r\n    const invoke = {\r\n      p_espotid: espotId,\r\n      p_bannerid: contentsId\r\n    }\r\n\r\n    mdUrl = mdUrl.replace(/&amp;/g, '&')\r\n\r\n    if (catalogId) {\r\n      invoke.catalogId = catalogId\r\n    }\r\n\r\n    if (target === 'Product') {\r\n      bizUtil.gotoProductDetail(clickCode, { clksrc })\r\n    } else if (target === 'Category') {\r\n      const categoryId = Number(clickCode)\r\n      if (categoryId < 0) { // 기획전\r\n        invoke.catgroupId = categoryId\r\n        invoke.via = 'NSMALL'\r\n        router.push({\r\n          name: 'exhibitionDetail',\r\n          query: invoke\r\n        })\r\n      } else {\r\n        const categoryParam = {\r\n          categoryId,\r\n          searchGubun: '01'\r\n        }\r\n        nsaxios.post('NSMobileCategory', categoryParam, data => {\r\n          if (data.msg.categoryInfo && data.msg.categoryInfo.categoryLevelFinal !== '1') { // 카테고리\r\n            router.push({\r\n              name: 'lnbCategory',\r\n              params: {\r\n                categoryNumber: clickCode\r\n              }\r\n            })\r\n          } else { // 편집매장\r\n            router.push({\r\n              name: 'slotStore',\r\n              params: {\r\n                categoryId\r\n              }\r\n            })\r\n          }\r\n        })\r\n      }\r\n    } else if (target === 'Internal') { // 내부 경로\r\n      gotoInternalPage(contentsId, espotId, mdUrl)\r\n    } else if (target === 'External') { // 외부 경로\r\n      // 외부경로가 자기자신(*.nsmall.com)일때는 내부경로로 이동\r\n      if (mdUrl.indexOf('.nsmall.com') > -1) {\r\n        mdUrl = mdUrl.replace(/https?:\\/\\/[^.]+\\.nsmall\\.com/gi, '')\r\n        router.push({ path: mdUrl })\r\n      } else {\r\n        window.open(mdUrl, target, 'status=1,toolbar=1,location=1,menubar=1,directories=1,resizable=1,scrollbars=1')\r\n      }\r\n    } else {\r\n      throw new Error(`clickTarget: [${target}] 오류입니다.`)\r\n    }\r\n  },\r\n  /**\r\n   * 메인 화면으로 이동\r\n   */\r\n  gotoMain: () => {\r\n    if (isOsApp()) { // native 이면\r\n      nativeUtil.goHome()\r\n    } else {\r\n      router.push({ name: 'storeHome' })\r\n    }\r\n  },\r\n  /**\r\n   * 상품 상세 페이지로 이동\r\n   *\r\n   * @param {string} partNumber 상품번호\r\n   * @param {Object} [params={}] params\r\n   */\r\n  gotoProductDetail: (partNumber, params = {}) => {\r\n    params.number = partNumber\r\n    router.push({\r\n      name: 'productDetail',\r\n      params\r\n    })\r\n  },\r\n  /**\r\n   * 주문서로 이동\r\n   *\r\n   * @param {Object} params 주문 상품 정보\r\n   */\r\n  gotoOrdersheet: params => {\r\n    // if (isOsApp()) { // APP\r\n    //   nativeUtil.gotoOrderSheet(JSON.stringify(params))\r\n    // } else { // WEB\r\n    // }\r\n  },\r\n  /**\r\n   * 상담신청 주문서로 이동\r\n   *\r\n   * @param {Object} params 주문 상품 정보\r\n   */\r\n  gotoOrderConsult: params => {\r\n    // if (isOsApp()) { // APP\r\n    //   nativeUtil.gotoOrderConsult(JSON.stringify(params))\r\n    // } else { // WEB\r\n  },\r\n  /**\r\n   * 회원정보 수정으로 이동\r\n   *\r\n   */\r\n  gotoMemberSetting: () => {\r\n    router.push({ name: 'memberModifyIntro' })\r\n  },\r\n  /**\r\n   * 최근 본 상품 저장\r\n   *\r\n   * @param {object} productInfo 저장할 최근 본 상품 정보\r\n   */\r\n  setRecentlyViewedProducts (productInfo) {\r\n    const recentlyViewedProducts = localStorageUtil.get(COMM_CONST.STORAGE_KEY.USER_VISIT_HIS)\r\n\r\n    const products = []\r\n    productInfo.settime = calcDate('', 0, 0, 0, 0, 'yyyy-MM-dd HH:mm:ss')\r\n    if (recentlyViewedProducts === null || recentlyViewedProducts === '') {\r\n      products.push(productInfo)\r\n    } else {\r\n      let isTrue = false\r\n\r\n      for (let i = 0; i < recentlyViewedProducts.length; i++) {\r\n        const info = recentlyViewedProducts[i]\r\n\r\n        if (info != null) {\r\n          const msecPerHour = 1000 * 60 * 60\r\n          const writetime = getDateParse(info.settime)\r\n          const readtime = getDateParse(calcDate('', 0, 0, 0, 0, 'yyyy-MM-dd HH:mm:ss'))\r\n          const writeMonDay = writetime.getMonth() + writetime.getDate()\r\n          const readMonDay = readtime.getMonth() + readtime.getDate()\r\n\r\n          const interval = (readtime.getTime() - writetime.getTime())\r\n          const hours = Math.floor(interval / msecPerHour)\r\n\r\n          if (hours <= 14 * 24) { // 14일\r\n            products.push(info)\r\n            if (!isTrue) {\r\n              isTrue = bizUtil.getHistoryPushFlag(productInfo, info, writeMonDay, readMonDay, isTrue)\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (!isTrue) {\r\n        if (products.length === 50) {\r\n          products.shift()\r\n        }\r\n\r\n        products.push(productInfo)\r\n      }\r\n    }\r\n    localStorageUtil.set(COMM_CONST.STORAGE_KEY.USER_VISIT_HIS, JSON.stringify(products))\r\n  },\r\n  /**\r\n   * 최근 본 상품 쌓는 여부 체크\r\n   *\r\n   * @param {object} dataInfo 저장할 최근 본 상품 정보\r\n   * @param {object} hisInfo 저장된 최근 본 상품 정보\r\n   * @param {string} writeMonDay 등록날짜\r\n   * @param {string} readMonDay 현재날짜\r\n   * @returns {boolean} 최근 본 상품 쌓는 여부\r\n   */\r\n  getHistoryPushFlag (dataInfo, hisInfo, writeMonDay, readMonDay) {\r\n    if (writeMonDay === readMonDay) {\r\n      if (hisInfo.hisGubun === COMMON_CONST.HISTORY_GUBUN.PRODUCT && dataInfo.partNumber === hisInfo.partNumber) { // 상품 중복 체크\r\n        return true\r\n      } else if (hisInfo.hisGubun === COMMON_CONST.HISTORY_GUBUN.CATEGORY && dataInfo.categoryId === hisInfo.categoryId) { // 카테고리 중복 체크\r\n        return true\r\n      } else if (hisInfo.hisGubun === COMMON_CONST.HISTORY_GUBUN.EXHIBITION && dataInfo.catgroupId === hisInfo.catgroupId) { // 기획전 중복 체크\r\n        return true\r\n      } else if (hisInfo.hisGubun === COMMON_CONST.HISTORY_GUBUN.EVENT && dataInfo.offerIdfr === hisInfo.offerIdfr) { // 이벤트 중복 체크\r\n        return true\r\n      }\r\n    }\r\n\r\n    return false\r\n  },\r\n  /**\r\n   * 최근 본 상품 가져오기\r\n   *\r\n   * @returns {array} 최근 본 상품 목록\r\n   */\r\n  getRecentlyViewedProducts () {\r\n    const recentlyViewedProducts = localStorageUtil.get(COMM_CONST.STORAGE_KEY.USER_VISIT_HIS)\r\n    if (!recentlyViewedProducts) {\r\n      return null\r\n    }\r\n\r\n    const products = []\r\n    for (let i = recentlyViewedProducts.length - 1; i >= 0; i--) {\r\n      const info = recentlyViewedProducts[i]\r\n\r\n      if (info != null) {\r\n        const msecPerHour = 1000 * 60 * 60\r\n\r\n        const settime = getDateParse(info.settime)\r\n        const readtime = getDateParse(calcDate('', 0, 0, 0, 0, 'yyyy-MM-dd HH:mm:ss'))\r\n        const interval = (readtime.getTime() - settime.getTime())\r\n        const hours = Math.floor(interval / msecPerHour)\r\n        info.realIndex = i\r\n\r\n        if (hours <= 14 * 24) { // 14일\r\n          products.push(info)\r\n        }\r\n      }\r\n    }\r\n\r\n    return products\r\n  },\r\n  /**\r\n   * 최근 본 상품 삭제\r\n   *\r\n   * @param {number} index 삭제할 최근 본 상품 인덱스\r\n   * @returns {array} 삭제 후 최근 본 상품 목록\r\n   */\r\n  delHistoryList (index) {\r\n    const recentlyViewedProducts = localStorageUtil.get(COMM_CONST.STORAGE_KEY.USER_VISIT_HIS)\r\n    if (recentlyViewedProducts) {\r\n      recentlyViewedProducts.splice(index, 1)\r\n\r\n      localStorageUtil.set(COMM_CONST.STORAGE_KEY.USER_VISIT_HIS, JSON.stringify(recentlyViewedProducts))\r\n    }\r\n\r\n    return bizUtil.getRecentlyViewedProducts()\r\n  },\r\n  /**\r\n   * Native 장바구니 카운트\r\n   * @returns {void}\r\n   */\r\n  getNativeCartCount: () => {\r\n    nsaxios.post('NSBasketCountCmdReal', {}, data => {\r\n      const count = data.msg.common ? data.msg.common.basketCnt : 0\r\n      nativeUtil.setCartCnt(JSON.stringify({ cartCnt: count }))\r\n    })\r\n  },\r\n  /**\r\n   * Native 장바구니 카운트\r\n   * @param {String} jsonString 장바구니에 담을 상품정보\r\n   * @returns {void}\r\n   */\r\n  setAddCart (jsonString) {\r\n    const invokeParams = jsonString\r\n    const successHandling = response => {\r\n      const orderId = response.orderId\r\n      if (orderId == null || orderId === '') {\r\n      } else {\r\n        nativeUtil.setAddCartResult('Y')\r\n      }\r\n    }\r\n    nsaxios.post('AjaxNSXorderItemAdd4Worklight', invokeParams, successHandling)\r\n  },\r\n  /**\r\n   * 사용자 탈퇴 여부 (필요한곳에서 호출할것)\r\n   *\r\n   * @returns {void}\r\n   */\r\n  async secessionMemberCheker () {\r\n    let returnBoolean = false\r\n    const invoke = {\r\n      processFlag: 'List'\r\n    }\r\n    const successHandling = response => {\r\n      if (!isNull(response.msg.root)) {\r\n        const logonId = response.msg.root.PersonalInfo.logonId\r\n        console.log('logonId >> ', logonId)\r\n\r\n        if (isNull(logonId) || logonId.indexOf('DEL_') > -1) {\r\n        } else {\r\n          returnBoolean = true\r\n        }\r\n      } else {\r\n        returnBoolean = true\r\n      }\r\n    }\r\n\r\n    if (loginUtil.getUserInfo('logonType') !== 'simple') {\r\n      await nsaxios.post('MobilePersonalInfoManageCmdReal', invoke, successHandling)\r\n    } else {\r\n      returnBoolean = true\r\n    }\r\n    return returnBoolean\r\n  }\r\n}\r\n\r\nexport default bizUtil\r\n","'use strict'\r\n\r\nimport COMM_CONST from '@constants/framework/constants'\r\nimport CONST from '@/common/constants/framework/framework'\r\nimport axios from 'axios'\r\nimport {\r\n  format\r\n} from '@frameworks/dateutil/dateUtil'\r\nimport localStorageUtil from '@frameworks/localStorageUtil'\r\n\r\nconst nslogAxios = axios.create({\r\n  baseURL: CONST.LOG.STREAM.URL.BASE\r\n})\r\n\r\n/**\r\n * @class\r\n * @since 2020.03.13\r\n * @author YongcheolKwon\r\n */\r\nclass KinesisSender {\r\n  /**\r\n   * @constructor\r\n   */\r\n  constructor () {\r\n    this._isSendReady = false\r\n    this._kinesisMockingApiGatewayUrl = CONST.LOG.STREAM.URL.BASE\r\n    this._mode = process.env.NODE_ENV\r\n    this.initMetaData()\r\n  }\r\n\r\n  /**\r\n   * @memberof KinesisSender\r\n   * @description 필요한 메타데이터 생성 처리\r\n   * e.g. this.initMetadata()\r\n   */\r\n  initMetaData () {\r\n    this.setUserAgent()\r\n  }\r\n\r\n  /**\r\n   * @memberof KinesisSender\r\n   * @description UserAgent값을 내부변수에 저장 처리\r\n   * e.g. this.setUserAgent()\r\n   */\r\n  setUserAgent () {\r\n    this._userAgent = navigator.userAgent\r\n  }\r\n\r\n  /**\r\n   * @memberof KinesisSender\r\n   * @description 내부변수에 설정된 UserAgent값을 반환\r\n   * e.g. this.getUserAgent\r\n   * @returns {string} Returns `UserAgent` string\r\n   */\r\n  get getUserAgent () {\r\n    return this._userAgent\r\n  }\r\n\r\n  /**\r\n   * @memberof KinesisSender\r\n   * @description 프로젝트 모드에 따른 로그 등록여부 반환\r\n   * e.g. KinesisSender.isAllowLog\r\n   * @returns {boolean} Returns `true`, `false`\r\n   */\r\n  get isAllowLog () {\r\n    return (CONST.IS_ALLOW_LOG)\r\n  }\r\n\r\n  /**\r\n   * @memberof KinesisSender\r\n   * @description Kinesis DataStream 단건 전송 URL 반환\r\n   * e.g. KinesisSender.getRecordSendUrl\r\n   */\r\n  get getRecordSendUrl () {\r\n    return CONST.LOG.STREAM.URL.SINGLE\r\n  }\r\n\r\n  /**\r\n   * @memberof KinesisSender\r\n   * @description Kinesis DataStream 발송 단건 레코드 데이터 생성\r\n   * e.g. KinesisSender.makeRecord(data)\r\n   * @param {object} data 전송할 로그 데이터\r\n   */\r\n  makeRecord (data) {\r\n    this._data = {\r\n      Data: Buffer.from(`${JSON.stringify(data)}\\n`).toString('base64'),\r\n      PartitionKey: data.request_id\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @memberof KinesisSender\r\n   * @description Kinesis DataStream 전송 단건 레코드 데이터 반환\r\n   * e.g. KinesisSender.getRecord\r\n   */\r\n  get getRecord () {\r\n    return this._data\r\n  }\r\n\r\n  /**\r\n   * @memberof KinesisSender\r\n   * @description Kinesis DataStream 단건 레코드 전송\r\n   * e.g. KinesisSender.sendRecord()\r\n   */\r\n  sendRecord () {\r\n    if (this.isAllowLog) {\r\n      nslogAxios.put(\r\n        this.getRecordSendUrl,\r\n        this.getRecord)\r\n    } else {\r\n      if (!CONST.IS_TEST_REPORT) { // unit test 환경이 아닐 때\r\n        console.info(CONST.LOG.MESSAGE.REQUEST.LOCAL_MODE)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst nslog = {\r\n  kinesisSender: new KinesisSender(),\r\n  /**\r\n   * @memberof nslog\r\n   * @description 전송할 로그 데이터 검증\r\n   * e.g. nslog.validate(type, args)\r\n   * @param {string} type 전송할 로그 타입\r\n   * @param {array} args 전송할 Arguments\r\n   * @returns {boolean} Returns `true`, `false`\r\n   */\r\n  validate: (type, args) => {\r\n    if (type === undefined) {\r\n      console.log(CONST.LOG.MESSAGE.VALID.TYPE_NOT_VALID)\r\n      return false\r\n    }\r\n    if (args.length === 0) {\r\n      console.log(CONST.LOG.MESSAGE.VALID.ARGS_LENGTH_ZERO)\r\n      return false\r\n    }\r\n    return true\r\n  },\r\n\r\n  /**\r\n   * @memberof nslog\r\n   * @description WCS API 호출 로그 단건 레코드 생성\r\n   * e.g. nslog.makeRecord(args)\r\n   * @param {array} args 전송할 Arguments\r\n   */\r\n  makeRecordByWCSApiCall (args) {\r\n    const apiUrl = args.url\r\n    const request = args.request\r\n    const response = args.response\r\n    const status = args.status\r\n    const page = args.page\r\n    const view = args.view\r\n\r\n    const data = {\r\n      request_id: localStorageUtil.get(COMM_CONST.STORAGE_KEY.UUID),\r\n      view,\r\n      page,\r\n      user_agent: this.kinesisSender.getUserAgent,\r\n      date: format(new Date(), 'yyyy-MM-dd HH:mm:ss'),\r\n      status,\r\n      api: {\r\n        url: apiUrl,\r\n        request,\r\n        response\r\n      },\r\n      error: {\r\n        type: '',\r\n        message: '',\r\n        trace: ''\r\n      }\r\n    }\r\n    this.kinesisSender.makeRecord(data)\r\n  },\r\n\r\n  /**\r\n   * @memberof nslog\r\n   * @description Runtime Error 로그 단건 레코드 생성\r\n   * e.g. nslog.makeRecordByError(args)\r\n   * @param {array} args 전송할 Arguments\r\n   */\r\n  makeRecordByError (args) {\r\n    const errorType = args.type\r\n    const errorMessage = args.message\r\n    const errorTrace = args.trace\r\n    const status = args.status\r\n    const page = args.page\r\n    const view = args.view\r\n\r\n    const data = {\r\n      request_id: localStorageUtil.get(COMM_CONST.STORAGE_KEY.UUID),\r\n      view,\r\n      page,\r\n      user_agent: this.kinesisSender.getUserAgent,\r\n      date: format(new Date(), 'yyyy-MM-dd HH:mm:ss'),\r\n      status,\r\n      api: {\r\n        url: '',\r\n        request: '',\r\n        response: ''\r\n      },\r\n      error: {\r\n        type: errorType,\r\n        message: errorMessage,\r\n        trace: JSON.stringify(errorTrace)\r\n      }\r\n    }\r\n    this.kinesisSender.makeRecord(data)\r\n  },\r\n\r\n  /**\r\n   * @memberof nslog\r\n   * @description 로그 데이터 단일 전송\r\n   * e.g. nslog.sendRecord(type, ...args)\r\n   * @param {string} type 전송 타입 `ERROR`, `REQUEST`, `RESPONSE`\r\n   * @param {array} args 전송할 Arguments\r\n   */\r\n  sendRecord (type, ...args) {\r\n    if (!this.validate(type, args)) {\r\n      return\r\n    }\r\n\r\n    switch (type) {\r\n      case CONST.LOG.TYPE.ERROR:\r\n        this.makeRecordByError(args[0])\r\n        break\r\n      case CONST.LOG.TYPE.RESPONSE:\r\n        this.makeRecordByWCSApiCall(args[0])\r\n        break\r\n    }\r\n\r\n    this.kinesisSender.sendRecord()\r\n  }\r\n}\r\n\r\nexport default nslog\r\n","import isOsApp from '@utils/commonutil/isOsApp'\r\n\r\n/**\r\n * view type 반환\r\n * @returns {String} view type (android|ios|androidweb|iosweb|other)\r\n */\r\nfunction viewType () {\r\n  const uagent = navigator.userAgent.toLocaleLowerCase()\r\n\r\n  if (isOsApp()) {\r\n    if (uagent.search('android') > -1) {\r\n      return 'android'\r\n    } else if (uagent.search('iphone') > -1 || uagent.search('ipad') > -1) {\r\n      return 'ios'\r\n    } else {\r\n      return 'other'\r\n    }\r\n  } else {\r\n    if (uagent.search('android') > -1) {\r\n      return 'androidweb'\r\n    } else if (uagent.search('iphone') > -1 || uagent.search('ipod') > -1 || uagent.search('ipad') > -1) {\r\n      return 'iosweb'\r\n    } else {\r\n      return 'other'\r\n    }\r\n  }\r\n}\r\n\r\nexport default viewType\r\n","const MESSAGES = {\r\n  IS_END: '종료하시겠습니까?',\r\n  APP_NAME: 'NS홈쇼핑',\r\n  WAS_ERROR: '서비스가 지연되고 있습니다.\\n잠시 후 다시 시도하시기 바랍니다.',\r\n  UNRESPONSE_HOST: '서버로부터 응답이 없습니다.\\n통신상태를 확인 하신 후 다시 시도해 주십시오.',\r\n  REQUEST_TIMEOUT: '서버로부터 응답이 없습니다.\\n통신상태를 확인 하신 후 다시 시도해 주십시오.',\r\n  PROCEDURE_ERROR: '데이터를 불러오는 중 문제가 발생했습니다.\\n잠시 후 다시 시도해 주십시오.',\r\n  UNSUPPORTED_VERSION: '지원하지 않는 버전입니다.\\n어플리케이션 업데이트 후 사용하십시오.',\r\n  TRANSACTION_FAIL: '서비스가 지연되고 있습니다.\\n잠시 후 다시 시도하여 주십시오.',\r\n  TRANSACTION_ERROR: '서버와 통신이 원활하지 못합니다.\\n잠시 후 다시 시도해 주십시오.',\r\n  UNEXPECTED_ERROR: '예기치 않은 문제가 발생했습니다.\\n잠시 후 다시 시도해 주십시오.',\r\n  LOGIN_REQUIRED: '로그인이 필요한 메뉴입니다.',\r\n  DIRECTUPDATE: '업데이트를 사용할 수 있습니다.'\r\n}\r\n\r\nexport default MESSAGES\r\n","\r\nimport {\r\n  isOsApp\r\n} from '@utils/commonutil/commonUtil'\r\nimport COMM_CONST from '@constants/framework/constants'\r\nimport cookieUtil from '@frameworks/cookieUtil'\r\n// import nativeUtil from '@frameworks/nativeUtil'\r\nimport localStorageUtil from '@frameworks/localStorageUtil'\r\nimport sessionStorageUtil from '@frameworks/sessionStorageUtil'\r\n// import loginUtil from '@utils/loginUtil'\r\n/**\r\n * 앱 재시작 (1회만 시도)\r\n *\r\n */\r\nfunction onReloadApp () {\r\n  let appReloadCnt = localStorageUtil.get(COMM_CONST.STORAGE_KEY.APP_RELOAD_CNT) || 0\r\n  appReloadCnt = Number(appReloadCnt)\r\n  if (appReloadCnt === 0) {\r\n    sessionStorageUtil.clear()\r\n\r\n    if (isOsApp()) {\r\n      // nativeUtil.logOut()\r\n      // loginUtil.logout()\r\n    }\r\n\r\n    cookieUtil.setCookie('co_cd', COMM_CONST.getCocd(), null, '/', 'nsmall.com') // 현재 co_cd 쿠키에 저장\r\n\r\n    localStorageUtil.set(COMM_CONST.STORAGE_KEY.APP_RELOAD_CNT, 1)\r\n\r\n    document.location.reload()\r\n  } else {\r\n    localStorageUtil.del(COMM_CONST.STORAGE_KEY.APP_RELOAD_CNT)\r\n  }\r\n}\r\n\r\nexport default onReloadApp\r\n","/* eslint-disable */\r\nimport axios from 'axios'\r\nimport {\r\n  parse,\r\n  stringify\r\n} from 'qs'\r\nimport cookieUtil from '@frameworks/cookieUtil'\r\nimport nslog from '@frameworks/logUtil'\r\nimport COMM_CONST from '@constants/framework/constants'\r\nimport CONST from '@constants/framework/framework'\r\nimport MESSAGES from '@constants/framework/messages'\r\nimport loginUtil from '@utils/loginUtil'\r\nimport errorUtil from '@frameworks/errorUtil'\r\nimport checkUpdateUtil from '@/common/utils/checkUpdateUtil'\r\nimport {\r\n  onReloadApp\r\n} from '@utils/commonutil/commonUtil'\r\n\r\n/**\r\n * axios request config (https://github.com/axios/axios#request-config)\r\n * @typedef {Object} RequestConfig\r\n * @property {String} url\r\n * @property {String} method\r\n * @property {Object} [headers]\r\n * @property {Object} [data]\r\n */\r\n\r\naxios.defaults.timeout = 100000\r\n\r\nlet reloadAppFlag = true // 세션 오류 발생 시 새로고침을 한 번만 수행하기 위한 flag\r\n\r\n// 요청 인터셉터\r\naxios.interceptors.request.use(\r\n  config => {\r\n    return config\r\n  },\r\n  error => {\r\n    // [로그] 발송전 오류 로그 적재\r\n    nslog.sendRecord(CONST.LOG.TYPE.ERROR, {\r\n      type: CONST.LOG.MESSAGE.REQUEST.ERROR,\r\n      message: error.message,\r\n      trace: error.stack,\r\n      status: '500',\r\n      page: errorUtil.getCurrentURL(),\r\n      view: errorUtil.getComponentName()\r\n    })\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\n// 응답 인터셉터\r\naxios.interceptors.response.use(\r\n  response => {\r\n\r\n    const config = response.config\r\n    const { url, method } = config\r\n\r\n    // NS MALL API 호출인 경우 별도 처리\r\n    let resultResponse = response\r\n    if (isInternalUrl(url)) {\r\n      resultResponse = response.data\r\n      if (resultResponse && resultResponse.constructor === Object) {\r\n        resultResponse.isSuccessful = response.status === 200\r\n      }\r\n\r\n      // 로깅 포맷을 위해 요청 파라미터를 Object로 변환\r\n      const data = parse(config.params || config.data)\r\n\r\n      // 로컬, 개발에서 요청, 응답 로그 출력\r\n      if (CONST.IS_DEV_LOG && !CONST.IS_TEST_REPORT) {\r\n        console.groupCollapsed(url.replace(`${CONST.API_URL}/`, ''))\r\n        console.log('request', {\r\n          method,\r\n          url,\r\n          data\r\n        })\r\n        console.log('response', resultResponse)\r\n        console.groupEnd()\r\n      }\r\n\r\n      if (reloadAppFlag) {\r\n        if (resultResponse.errorMessageKey === '_ERR_DIDNT_LOGON') {\r\n          // 'CMN3101E {0}(으)로 인해 시스템을 사용할 수 없습니다.' case 처리\r\n          reloadAppFlag = false\r\n\r\n          cookieUtil.setCookie('JSESSIONID', '', 'Thu, 01 Jan 1970 00:00:00 GMT', '/')\r\n\r\n          onReloadApp()\r\n        } else if (resultResponse.errorMessageKey === '_ERR_INVALID_COOKIE') {\r\n        // '사용자에 대해 올바르지 않은 쿠키가 수신되었습니다. 다른 사용자가 해당 로그인 ID를 사용하고 있을 수 있습니다.' case 처리\r\n          reloadAppFlag = false\r\n\r\n          onReloadApp()\r\n        }\r\n      }\r\n\r\n      // API 서버로 부터 content-type이 text/html인 response를 받았을 때 에러 페이지인지 체크]\r\n      const headers = response.headers\r\n      const contentType = headers ? headers['content-type'] : ''\r\n      const isHtmlResponse = contentType ? contentType.includes('text/html;') : false\r\n      if (isHtmlResponse && resultResponse.includes('찾을 수 없는 페이지입니다.')) {\r\n        console.error(MESSAGES.PROCEDURE_ERROR)\r\n      }\r\n\r\n      // 응답 로그\r\n      if (CONST.IS_ALLOW_SUCCESS_LOG) {\r\n        nslog.sendRecord(CONST.LOG.TYPE.RESPONSE, {\r\n          url,\r\n          request: data,\r\n          response: resultResponse,\r\n          status: response.status,\r\n          page: errorUtil.getCurrentURL(),\r\n          view: errorUtil.getComponentName()\r\n        })\r\n      }\r\n    }\r\n\r\n    return resultResponse\r\n  },\r\n  error => {\r\n    // 로컬, 개발에서 에러 로그 출력\r\n    if (CONST.IS_DEV_LOG) {\r\n      if (isInternalUrl(error.config.url) && error.message === 'Network Error') {\r\n        console.error('API 서버 재시작 중...')\r\n\r\n        return\r\n      }\r\n\r\n      console.error(error.message)\r\n    }\r\n\r\n    // [로그] 발송후 오류 로그 적재\r\n    nslog.sendRecord(CONST.LOG.TYPE.ERROR, {\r\n      type: CONST.LOG.MESSAGE.RESPONSE.ERROR,\r\n      message: error.message,\r\n      trace: error.stack,\r\n      status: '500',\r\n      page: errorUtil.getCurrentURL(),\r\n      view: errorUtil.getComponentName()\r\n    })\r\n\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\n/**\r\n * NS MALL API 호출 공통 파라미터 설정\r\n *\r\n * @param {Object} data 요청 파라미터\r\n * @param {String} url API tranId\r\n */\r\nconst setWCSCommonParameter = (data, url) => {\r\n  data.accptPath = COMM_CONST.getAcceptPath()\r\n  data.accptPathCd = COMM_CONST.getAcceptPath()\r\n  data.req_co_cd = COMM_CONST.getCocd()\r\n  // 슬롯매장 API이며 사내특가매장, 하림특가매장이 아닐때는 userId 파라미터 제외 (슬롯매장 조회 API가 userId 별로 캐시되는 이슈 처리)\r\n  const isSeteUserIdParam = url !== 'NSSlotShopCmd' || [CONST.CATEGORY_ID_EMPLOYEE, CONST.CATEGORY_ID_HARIM].includes(data.topCategoryId)\r\n  if (isSeteUserIdParam) {\r\n    data.userId = data.userId || loginUtil.userId()\r\n  }\r\n  data.catalogId = data.catalogId || COMM_CONST.getDefaultCatalogId()\r\n\r\n}\r\n\r\n/**\r\n * NS MALL API 호출 URL인지 여부\r\n * @param {String} url 호출 URL\r\n */\r\nconst isInternalUrl = url => url.startsWith(CONST.API_URL)\r\n\r\n/**\r\n * 응답값 공통 에러 발생 여부\r\n * @param {*} response API response\r\n * @returns {Boolean}\r\n */\r\nconst didCommonErrorOccur = response => {\r\n  const typeOfResponse = typeof response\r\n\r\n  if (typeOfResponse === 'string') {\r\n    return true\r\n  } else {\r\n    return false\r\n  }\r\n}\r\n\r\n/**\r\n * 에러 발생기\r\n * @param {*} response API response\r\n */\r\nconst generateError = response => {  \r\n  const typeOfResponse = typeof response\r\n\r\n  if (typeOfResponse === 'string') {\r\n    CONST.API_ERROR_MESSAGES.forEach((errorMessage, index) => {\r\n      const isErrorMessageThere = response.includes(errorMessage)\r\n\r\n      if (isErrorMessageThere) {\r\n        throw new Error(CONST.API_ERROR_MESSAGES[index])\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\n/**\r\n * 에러 처리기\r\n * @param {Object} error \r\n */\r\nconst handleCommonError = error => {  \r\n  if (!doesCommonErrorContains(error)) {\r\n    return\r\n  }\r\n  \r\n}\r\n\r\n/**\r\n * 공통 에러 포함여부 \r\n * @param {Object} error \r\n * @returns {Boolean}\r\n */\r\nconst doesCommonErrorContains = error => {\r\n  const errorMessage = error.message\r\n\r\n  return CONST.API_ERROR_MESSAGES.includes(errorMessage)\r\n}\r\n\r\n/**\r\n * Request method 공통 처리\r\n * @param {RequestConfig} config\r\n * @param {Function} [successHandling] 성공 callback\r\n * @param {Function} [errorHandling] 실패 callback\r\n * @returns {Promise}\r\n */\r\nconst common = (config, successHandling, errorHandling) => {\r\n  if (!config.data) {\r\n    Promise.reject(new Error('필수 입력 parameter가 부족합니다.'))\r\n    return\r\n  }\r\n\r\n  if (config.url.startsWith('http') || config.url.startsWith('//')) {\r\n    // NS MALL API 외 호출\r\n  } else {\r\n    // NS MALL API 호출\r\n    if (config.method !== 'get') {\r\n      // NS MALL API 호출 공통 파라미터 추가\r\n      setWCSCommonParameter(config.data, config.url)\r\n    }\r\n    config.url = `${CONST.API_URL}/${config.url}` // NS MALL API URL을 붙여줌\r\n  }\r\n\r\n  config.withCredentials = isInternalUrl(config.url)\r\n  config[config.method === 'get' ? 'params' : 'data'] = stringify(config.data, { arrayFormat: 'repeat' })\r\n\r\n  // axios 호출\r\n  const resultPromise = axios(config)\r\n\r\n  // response 핸들링을 직접 처리하는 경우\r\n  if (successHandling) {\r\n    return resultPromise\r\n      .then(response => {\r\n        if (didCommonErrorOccur(response)) {\r\n          generateError(response)\r\n        }\r\n\r\n        successHandling(response)\r\n      })\r\n      .catch(error => {\r\n        // 업데이트 확인\r\n        if (!CONST.IS_LOCAL_MODE && !CONST.IS_TEST_REPORT) {\r\n          checkUpdateUtil.check(CONST.UPDATE.CHECK_TYPE.NONE)\r\n        }\r\n\r\n        handleCommonError(error) // 공통 에러 처리\r\n\r\n        if (errorHandling) {\r\n          errorHandling(error)\r\n        } else {\r\n          console.error(error)\r\n        }\r\n      })\r\n  // response 핸들링을 다음 프로세스에게 위임하는 경우\r\n  } else {\r\n    return resultPromise\r\n  }\r\n}\r\n\r\n// axios wrapping\r\nconst nsaxios = {\r\n  /**\r\n   * 동시 요청 처리\r\n   * @param {Array<Promise>} iterable 동시 요청할 함수\r\n   * @param {Function} successHandling 성공 callback\r\n   * @param {Function} [errorHandling] 실패 callback\r\n   * @returns {Promise} promise\r\n   */\r\n  all: (iterable, successHandling, errorHandling) => {\r\n    if (!Array.isArray(iterable)) {\r\n      Promise.reject(new Error('첫 번째 파라미터는 배열이여야 합니다.'))\r\n      return\r\n    }\r\n\r\n    if (iterable.some(obj => Object.prototype.toString.call(obj) !== '[object Promise]')) {\r\n      Promise.reject(new Error('배열의 요소는 Promise 객체여야 합니다.'))\r\n      return\r\n    }\r\n\r\n    if (typeof successHandling !== 'function') {\r\n      Promise.reject(new Error('successHandling은 필수입니다.'))\r\n      return\r\n    }\r\n\r\n    return axios.all(iterable)\r\n      .then(axios.spread((...result) => {\r\n        successHandling(...result)\r\n      }))\r\n      .catch(error => {\r\n        if (errorHandling) {\r\n          errorHandling(error)\r\n        } else {\r\n          console.error(error.message)\r\n        }\r\n      })\r\n  },\r\n  /**\r\n   * GET HTTP 요청\r\n   * @param {String} url 요청 URL. NS MALL API 호출 시는 tranId만 입력. ex) 'DetailProductViewReal'\r\n   * @param {Object} data 요청 파라미터\r\n   * @param {Function} [successHandling] 성공 callback\r\n   * @param {Function} [errorHandling] 실패 callback\r\n   * @returns {Promise} promise\r\n   */\r\n  get: (url, data, successHandling, errorHandling) => common({\r\n    method: 'get',\r\n    url,\r\n    data\r\n  }, successHandling, errorHandling),\r\n  /**\r\n   * POST HTTP 요청\r\n   * @param {String} url 요청 URL. NS MALL API 호출 시는 tranId만 입력. ex) 'DetailProductViewReal'\r\n   * @param {Object} data 요청 파라미터\r\n   * @param {Function} [successHandling] 성공 callback\r\n   * @param {Function} [errorHandling] 실패 callback\r\n   * @returns {Promise} promise\r\n   */\r\n  post: (url, data, successHandling, errorHandling) => common({\r\n    method: 'post',\r\n    url,\r\n    data\r\n  }, successHandling, errorHandling),\r\n  /**\r\n   * PUT HTTP 요청\r\n   * @param {String} url 요청 URL. NS MALL API 호출 시는 tranId만 입력. ex) 'DetailProductViewReal'\r\n   * @param {Object} data 요청 파라미터\r\n   * @param {Function} [successHandling] 성공 callback\r\n   * @param {Function} [errorHandling] 실패 callback\r\n   * @returns {Promise} promise\r\n   */\r\n  put: (url, data, successHandling, errorHandling) => common({\r\n    method: 'put',\r\n    url,\r\n    data\r\n  }, successHandling, errorHandling),\r\n  /**\r\n   * DELETE HTTP 요청\r\n   * @param {String} url 요청 URL. NS MALL API 호출 시는 tranId만 입력. ex) 'DetailProductViewReal'\r\n   * @param {Object} data 요청 파라미터\r\n   * @param {Function} [successHandling] 성공 callback\r\n   * @param {Function} [errorHandling] 실패 callback\r\n   * @returns {Promise} promise\r\n   */\r\n  delete: (url, data, successHandling, errorHandling) => common({\r\n    method: 'delete',\r\n    url,\r\n    data\r\n  }, successHandling, errorHandling),\r\n  /**\r\n   * PATCH HTTP 요청\r\n   * @param {String} url 요청 URL. NS MALL API 호출 시는 tranId만 입력. ex) 'DetailProductViewReal'\r\n   * @param {Object} data 요청 파라미터\r\n   * @param {Function} [successHandling] 성공 callback\r\n   * @param {Function} [errorHandling] 실패 callback\r\n   * @returns {Promise} promise\r\n   */\r\n  patch: (url, data, successHandling, errorHandling) => common({\r\n    method: 'patch',\r\n    url,\r\n    data\r\n  }, successHandling, errorHandling),\r\n  /**\r\n   * OPTION HTTP 요청\r\n   * @param {String} url 요청 URL. NS MALL API 호출 시는 tranId만 입력. ex) 'DetailProductViewReal'\r\n   * @param {Object} data 요청 파라미터\r\n   * @param {Function} [successHandling] 성공 callback\r\n   * @param {Function} [errorHandling] 실패 callback\r\n   * @returns {Promise} promise\r\n   */\r\n  options: (url, data, successHandling, errorHandling) => common({\r\n    method: 'options',\r\n    url,\r\n    data\r\n  }, successHandling, errorHandling),\r\n  /**\r\n   * axios(config)\r\n   * @param {RequestConfig} config\r\n   */\r\n  request: config => axios(config)\r\n}\r\n\r\nexport { \r\n  nsaxios as default, \r\n  setWCSCommonParameter,\r\n  doesCommonErrorContains\r\n}\r\n"],"sourceRoot":""}